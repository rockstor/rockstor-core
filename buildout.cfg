[buildout]

#don't use any site packages for complete isolation
include-site-packages = false

python = python

#i've seen timeouts with nat vms. this seems to help
socket-timeout = 120

#let's lock all versions here and setup.py
versions = myversions

parts =
      clean-check
      centos-reqs
      django
      scripts
      gunicorn
      nginx-conf
      django-settings-conf
      mime-types
      init-gunicorn
      collectstatic
      supervisor
      supervisord-conf
      extra-stuff
      cli-user

develop =
        .

eggs =
     rockstor

#caches packages downloaded after the first run or buildout
download-cache = /tmp/

[centos-reqs]
recipe = plone.recipe.command
stop-on-error = true
install_cmd = sudo /usr/bin/yum install -y
# samba for samba server
# libevent-devel is required for gevent which is required by gevent-socketio
# it seems python-devel is 2.6 version but required and seems to work for
# greenlet
# openssl-devel is for nginx tcp proxy module to work
command =
        ${centos-reqs:install_cmd} libevent-devel samba python-devel openssl-devel gcc-c++ sqlite-devel

[python]
recipe = zc.recipe.cmmi
url = http://python.org/ftp/python/2.7.3/Python-2.7.3.tgz
executable = ${buildout:directory}/parts/python/bin/python2.7
extra_options =
              --enable-unicode=ucs4
              --with-threads
              --with-readline

[extra-stuff]
recipe = plone.recipe.command
command = mkdir -p ${buildout:directory}/var/{log,run} &&
          usermod -a -G root nginx &&
          chkconfig nginx off &&
          rm ${buildout:directory}/src/rockstor/{datastore,smartdb} && 
          export DJANGO_SETTINGS_MODULE=settings &&
	  ${buildout:directory}/bin/django syncdb --database=default --noinput &&
	  ${buildout:directory}/bin/django syncdb --database=smart_manager --noinput &&
          ${buildout:directory}/bin/prep_db
update-command = ${extra-stuff:command}

[clean-check]
recipe = plone.recipe.command
ctl = ${buildout:directory}/bin/supervisorctl
command = (if [ -f ${clean-check:ctl} ]; then ${clean-check:ctl} shutdown; fi) &&
	  umount -a -t btrfs
update-command = ${clean-check:command}
stop-on-error = yes

[myvar]
nginx_websocket_port = 7999

[myversions]
django = 1.4.3
gunicorn = 0.16.1
supervisor = 3.0b1
python = 2.7.3

[django]
recipe = djangorecipe
project = rockstor
projectegg = rockstor
settings = settings
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}/src

[scripts]
recipe = zc.recipe.egg:scripts
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}/src

[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/conf/nginx.conf.in
output = ${buildout:directory}/etc/nginx/nginx.conf

[mime-types]
recipe = collective.recipe.template
input = ${buildout:directory}/conf/mime.types
output = ${buildout:directory}/etc/nginx/mime.types

[gunicorn]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
eggs =
     ${buildout:eggs}
     gunicorn

[supervisor]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
eggs =
     ${buildout:eggs}
     supervisor

[supervisord-conf]
recipe = collective.recipe.template
host = 127.0.0.1
port = 9001
logdir = ${buildout:directory}/var/log
logfile = ${supervisord-conf:logdir}/supervisord.log
pidfile = ${buildout:directory}/var/run/supervisord.pid
#gunicorn_cmd = ${buildout:directory}/bin/gunicorn --bind=${init-gunicorn:bind}:${init-gunicorn:port} --pid=${init-gunicorn:pidfile} --worker-class socketio.sgunicorn.GeventSocketIOWorker --workers=${init-gunicorn:workers} --log-file=${init-gunicorn:logfile} --pythonpath=${buildout:directory}/src/rockstor --settings=settings wsgi:application
gunicorn_cmd = ${buildout:directory}/bin/gunicorn --bind=${init-gunicorn:bind}:${init-gunicorn:port} --pid=${init-gunicorn:pidfile} --workers=${init-gunicorn:workers} --log-file=${init-gunicorn:logfile} --pythonpath=${buildout:directory}/src/rockstor --settings=settings wsgi:application
websocket_cmd = ${buildout:directory}/bin/wc
smart_manager_cmd = ${buildout:directory}/bin/sm
input = ${buildout:directory}/conf/supervisord.conf.in
output = ${buildout:directory}/etc/supervisord.conf

[init-gunicorn]
recipe = collective.recipe.template
bind = 127.0.0.1
port = 8000
workers = 1
user = rocky
logfile = ${buildout:directory}/var/log/gunicorn.log
pidfile = ${buildout:directory}/var/run/gunicorn.pid
input = ${buildout:directory}/conf/gunicorn.in
output = ${buildout:directory}/etc/init.d/gunicorn

[collectstatic]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = ${buildout:directory}/bin/django collectstatic --noinput -i admin -v 0

[cli-user]
recipe = collective.recipe.cmd
username = rocky
on_install = true
on_update = false
cmds =
     /usr/sbin/usermod -s ${buildout:bin-directory}/rcli ${cli-user:username}

[django-settings-conf]
recipe = collective.recipe.template
rootdir = ${buildout:directory}/src/rockstor
datastore = ${django-settings-conf:rootdir}/datastore
smartdb = ${django-settings-conf:rootdir}/smartdb
static_dir = ${django-settings-conf:rootdir}/templates/storageadmin/js
template_dir1 = ${django-settings-conf:rootdir}/templates/storageadmin
template_dir2 = ${django-settings-conf:rootdir}/templates/admin
smb_conf = ${buildout:directory}/conf/smb.conf
logfile = ${buildout:directory}/var/log/rockstor.log
taplib = ${django-settings-conf:rootdir}/smart_manager/taplib
tapport = 10000
input = ${buildout:directory}/conf/settings.conf.in
output = ${django-settings-conf:rootdir}/settings.py
