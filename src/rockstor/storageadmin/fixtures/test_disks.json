[
{
    "fields": {
        "username": "admin",
        "first_name": "",
        "last_name": "",
        "is_active": true,
        "is_superuser": false,
        "is_staff": false,
        "last_login": "2018-03-18T17:26:57.185Z",
        "groups": [],
        "user_permissions": [],
        "password": "pbkdf2_sha256$20000$BcwtQcp041Xl$Haswv9OynQfhUGXehs91tYwPB6xo7b55RvwKrfXxdTM=",
        "email": "",
        "date_joined": "2018-03-11T15:54:05.635Z"
    },
    "model": "auth.user",
    "pk": 1
},
{
    "fields": {
        "expire_date": "2018-04-01T17:26:57.189Z",
        "session_data": "Y2YxZTUyNmUwYzQ0MmZjNTU1YjJiOTJlMWIxYTgxN2M5OWNmZjg3YTp7Il9hdXRoX3VzZXJfaGFzaCI6IjZkZDU0Mjk1OGUxZTIxM2I4NjZmNDdkNjBjNTAzY2U2YTYxMTRlYTUiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0="
    },
    "model": "sessions.session",
    "pk": "ch8ik9dgbkifzl9he2wl1ptq29zcjyeh"
},
{
    "fields": {
        "expire_date": "2018-04-01T11:39:23.302Z",
        "session_data": "Y2YxZTUyNmUwYzQ0MmZjNTU1YjJiOTJlMWIxYTgxN2M5OWNmZjg3YTp7Il9hdXRoX3VzZXJfaGFzaCI6IjZkZDU0Mjk1OGUxZTIxM2I4NjZmNDdkNjBjNTAzY2U2YTYxMTRlYTUiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0="
    },
    "model": "sessions.session",
    "pk": "z2mq4dkhhtwm1ulzta3i2y27kll0v10i"
},
{
    "fields": {
        "domain": "example.com",
        "name": "example.com"
    },
    "model": "sites.site",
    "pk": 1
},
{
    "fields": {
        "raid": "single",
        "compression": "no",
        "uuid": "b3d201a8-b497-4365-a90d-a50c50b8e808",
        "name": "rockstor_install-test",
        "mnt_options": null,
        "role": "root",
        "toc": "2018-03-19T14:23:05.857Z",
        "size": 7025459
    },
    "model": "storageadmin.pool",
    "pk": 1
},
{
    "fields": {
        "smart_enabled": false,
        "parted": true,
        "btrfs_uuid": "b3d201a8-b497-4365-a90d-a50c50b8e808",
        "vendor": "0x1af4",
        "name": "virtio-3579-part3",
        "smart_available": false,
        "transport": null,
        "smart_options": null,
        "role": "{\"root\": \"btrfs\"}",
        "serial": "3579",
        "offline": false,
        "model": null,
        "pool": 1,
        "size": 7025459
    },
    "model": "storageadmin.disk",
    "pk": 1
},
{
    "fields": {
        "smart_enabled": true,
        "parted": false,
        "btrfs_uuid": null,
        "vendor": "ATA",
        "name": "ata-QEMU_HARDDISK_serial-1",
        "smart_available": true,
        "transport": "sata",
        "smart_options": null,
        "role": null,
        "serial": "serial-1",
        "offline": false,
        "model": "QEMU HARDDISK",
        "pool": null,
        "size": 5242880
    },
    "model": "storageadmin.disk",
    "pk": 2
},
{
    "fields": {
        "smart_enabled": false,
        "parted": false,
        "btrfs_uuid": null,
        "vendor": "0x1af4",
        "name": "detached-97e451e7f51a4adf9ee303808644286b",
        "smart_available": false,
        "transport": null,
        "smart_options": null,
        "role": null,
        "serial": "serial-3",
        "offline": true,
        "model": null,
        "pool": null,
        "size": 5242880
    },
    "model": "storageadmin.disk",
    "pk": 3
},
{
    "fields": {
        "smart_enabled": true,
        "parted": false,
        "btrfs_uuid": null,
        "vendor": "ATA",
        "name": "ata-QEMU_HARDDISK_serial-2",
        "smart_available": true,
        "transport": "sata",
        "smart_options": null,
        "role": null,
        "serial": "serial-2",
        "offline": false,
        "model": "QEMU HARDDISK",
        "pool": null,
        "size": 5242880
    },
    "model": "storageadmin.disk",
    "pk": 12
},
{
    "fields": {
        "pqgroup_rusage": 16,
        "group": "root",
        "name": "home",
        "perms": "755",
        "pqgroup": "2015/2",
        "eusage": 16,
        "uuid": null,
        "pqgroup_eusage": 16,
        "compression_algo": null,
        "owner": "root",
        "replica": false,
        "qgroup": "0/258",
        "toc": "2018-03-19T14:23:05.960Z",
        "subvol_name": "home",
        "rusage": 16,
        "pool": 1,
        "size": 7025459
    },
    "model": "storageadmin.share",
    "pk": 1
},
{
    "fields": {
        "pqgroup_rusage": 2243952,
        "group": "root",
        "name": "root",
        "perms": "755",
        "pqgroup": "2015/5",
        "eusage": 2243952,
        "uuid": null,
        "pqgroup_eusage": 2243952,
        "compression_algo": null,
        "owner": "root",
        "replica": false,
        "qgroup": "0/257",
        "toc": "2018-03-19T14:23:05.993Z",
        "subvol_name": "root",
        "rusage": 2243952,
        "pool": 1,
        "size": 7025459
    },
    "model": "storageadmin.share",
    "pk": 2
},
{
    "fields": {
        "pqgroup_rusage": 16,
        "group": "root",
        "name": "rootshare",
        "perms": "755",
        "pqgroup": "2015/1",
        "eusage": 16,
        "uuid": null,
        "pqgroup_eusage": 16,
        "compression_algo": "no",
        "owner": "root",
        "replica": false,
        "qgroup": "0/278",
        "toc": "2018-03-19T14:23:05.920Z",
        "subvol_name": "rootshare",
        "rusage": 16,
        "pool": 1,
        "size": 1048576
    },
    "model": "storageadmin.share",
    "pk": 4
},
{
    "fields": {
        "autoconnect": true,
        "name": "eth0",
        "ipv6_dns": null,
        "ipv4_addresses": "192.168.124.235/24",
        "ipv6_gw": null,
        "ipv6_addresses": null,
        "ipv4_dns": "192.168.124.1",
        "state": "activated",
        "ipv4_method": "auto",
        "ipv6_dns_search": null,
        "master": null,
        "ipv4_gw": "192.168.124.1",
        "ipv4_dns_search": null,
        "ipv6_method": null,
        "uuid": "8dca3630-8c54-4ad7-8421-327cc2d3d14a"
    },
    "model": "storageadmin.networkconnection",
    "pk": 1
},
{
    "fields": {
        "name": "lo",
        "state": "10 (unmanaged)",
        "dtype": "loopback",
        "connection": null,
        "mtu": "65536",
        "mac": "00:00:00:00:00:00"
    },
    "model": "storageadmin.networkdevice",
    "pk": 1
},
{
    "fields": {
        "name": "eth0",
        "state": "100 (connected)",
        "dtype": "ethernet",
        "connection": 1,
        "mtu": "1500",
        "mac": "52:54:00:58:5D:66"
    },
    "model": "storageadmin.networkdevice",
    "pk": 2
},
{
    "fields": {
        "connection": 1,
        "mtu": "auto",
        "mac": "52:54:00:58:5D:66",
        "cloned_mac": null
    },
    "model": "storageadmin.ethernetconnection",
    "pk": 1
},
{
    "fields": {
        "current_appliance": true,
        "uuid": "679E27FE-EB1A-4DE4-98EF-D9416830C4F5",
        "mgmt_port": 443,
        "ip": "",
        "hostname": "install-test",
        "client_id": null,
        "client_secret": null
    },
    "model": "storageadmin.appliance",
    "pk": 1
},
{
    "fields": {
        "admin": true,
        "groupname": "admin",
        "gid": 1005
    },
    "model": "storageadmin.group",
    "pk": 1
},
{
    "fields": {
        "username": "admin",
        "public_key": null,
        "shell": "/bin/bash",
        "group": 1,
        "uid": 1005,
        "admin": true,
        "gid": 1005,
        "user": [
            "admin"
        ],
        "smb_shares": [],
        "email": null,
        "homedir": "/home/admin"
    },
    "model": "storageadmin.user",
    "pk": 1
},
{
    "fields": {
        "setup_network": false,
        "setup_user": true,
        "setup_disks": false,
        "setup_system": true
    },
    "model": "storageadmin.setup",
    "pk": 1
},
{
    "fields": {
        "display_name": "Backup",
        "css_file_name": "backup",
        "description": "Backup Server functionality",
        "js_file_name": "backup",
        "key": "",
        "name": "backup"
    },
    "model": "storageadmin.plugin",
    "pk": 1
},
{
    "fields": {
        "application": 1,
        "name": "cliapp",
        "user": 1
    },
    "model": "storageadmin.oauthapp",
    "pk": 1
},
{
    "fields": {
        "status": "stopped",
        "website": "https://github.com/daniel-illi/docker-haproxy-letsencrypt/tree/rock-on",
        "volume_add_support": false,
        "name": "haproxy-letsencrypt",
        "more_info": "At startup the config file named haproxy.cfg gets created in the config volume unless a file with the same name already exists. Extend it with your own custom configuration.<br/>An example configuration file can be found here: <a href='https://cdn.rawgit.com/daniel-illi/docker-haproxy-letsencrypt/rock-on/haproxy.cfg.example'>haproxy.cfg.example</a><br/>The exposed http port must be reachable on port 80 from the internet for letsencrypt hostname validation. Configure your router accordingly.",
        "state": "available",
        "version": "1.0.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": "https://cdn.rawgit.com/daniel-illi/docker-haproxy-letsencrypt/rock-on/logo.png",
        "description": "Reliable, High Performance TCP/HTTP Load Balancer with letsencrypt integration."
    },
    "model": "storageadmin.rockon",
    "pk": 1
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/sickbeard/",
        "volume_add_support": true,
        "name": "Sickbeard",
        "more_info": "The ultimate PVR application that searches for and manages your TV shows",
        "state": "available",
        "version": "alpha",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Internet PVR for your TV shows, by Linuxserver.io"
    },
    "model": "storageadmin.rockon",
    "pk": 2
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/ombi/",
        "volume_add_support": true,
        "name": "Ombi",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Ombi allows you to host your own Plex Request and user management system"
    },
    "model": "storageadmin.rockon",
    "pk": 3
},
{
    "fields": {
        "status": "stopped",
        "website": "http://bitcoin.com",
        "volume_add_support": true,
        "name": "Bitcoin",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": false,
        "icon": null,
        "description": "Bitcoin full node"
    },
    "model": "storageadmin.rockon",
    "pk": 4
},
{
    "fields": {
        "status": "stopped",
        "website": "http://www.subsonic.org",
        "volume_add_support": true,
        "name": "Subsonic",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Subsonic music server"
    },
    "model": "storageadmin.rockon",
    "pk": 5
},
{
    "fields": {
        "status": "stopped",
        "website": "https://www.discourse.org/",
        "volume_add_support": false,
        "name": "Discourse",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "100% open source discussion platform"
    },
    "model": "storageadmin.rockon",
    "pk": 6
},
{
    "fields": {
        "status": "stopped",
        "website": "https://owncloud.org/",
        "volume_add_support": false,
        "name": "OwnCloud",
        "more_info": "<p>Default username for your OwnCloud UI is<code>admin</code>and password is<code>changeme</code></p>",
        "state": "available",
        "version": "8.2.1",
        "link": "",
        "https": true,
        "ui": true,
        "icon": "https://owncloud.org/wp-content/themes/owncloudorgnew/assets/img/common/logo_owncloud.svg",
        "description": "Secure file sharing and hosting"
    },
    "model": "storageadmin.rockon",
    "pk": 7
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/jrcs/crashplan/",
        "volume_add_support": true,
        "name": "crashplan",
        "more_info": "<h4>Add more storage Crashplan to backup</h4><p>You can add more Shares to backup to crashplan rockon from the settings wizard of this Rock-on. Then, from crashplan UI on your <em>desktop</em> setup your backup. Refer to <a href=https://support.crashplan.com/Configuring/Using_CrashPlan_On_A_Headless_Computer>Crashplan: Using crashplan Headless</a></p>",
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": false,
        "icon": null,
        "description": "CrashPlan rockon, container from jrcs/crashplan"
    },
    "model": "storageadmin.rockon",
    "pk": 8
},
{
    "fields": {
        "status": "stopped",
        "website": "https://about.gitlab.com/",
        "volume_add_support": false,
        "name": "GitLab CE",
        "more_info": "<p>Default username for your GitLab UI is<code>root</code>and password is<code>5iveL!fe</code></p><p>HTTPS is not enabled by defautt, please see: <a href='https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#enable-https'> https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#enable-https</a></p>",
        "state": "available",
        "version": "1.1",
        "link": null,
        "https": false,
        "ui": true,
        "icon": "https://about.gitlab.com/images/wordmark.png",
        "description": "Git repository hosting and collaboration"
    },
    "model": "storageadmin.rockon",
    "pk": 9
},
{
    "fields": {
        "status": "stopped",
        "website": "https://freshrss.org/",
        "volume_add_support": false,
        "name": "FreshRSS",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": null,
        "description": "FreshRSS is a free, self-hostable aggregator for rss feeds"
    },
    "model": "storageadmin.rockon",
    "pk": 10
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/sabnzbd/",
        "volume_add_support": true,
        "name": "sabnzb",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "The best usenet downloader."
    },
    "model": "storageadmin.rockon",
    "pk": 11
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/booksonic/",
        "volume_add_support": true,
        "name": "booksonic",
        "more_info": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Booksonic by Linuxserver.io"
    },
    "model": "storageadmin.rockon",
    "pk": 12
},
{
    "fields": {
        "status": "stopped",
        "website": "https://github.com/aptalca/docker-zoneminder/tree/v1.29",
        "volume_add_support": true,
        "name": "ZoneMinder",
        "more_info": "</h4>Tips and Setup Instructions:</h4></p>        </p>        This container includes mysql, no need for a separate mysql/mariadb container</p>            All settings and library files are stored outside of the container and they are preserved when this docker is updated or re-installed (change the variable /path/to/config in the run command to a location of your choice)</p>            This container includes avconv (ffmpeg variant) and cambozola but they need to be enabled in the settings. In the WebUI, click on Options in the top right corner and go to the Images tab</p>            Click on the box next to OPT_Cambozola to enable</p>            Click on the box next OPT_FFMPEG to enable ffmpeg</p>            Enter the following for ffmpeg path: /usr/bin/avconv</p>                Enter the following for ffmpeg output options: -r 30 -vcodec libx264 -threads 2 -b 2000k -minrate 800k -maxrate 5000k (you can change these options to your liking)</p>                    Next to ffmpeg_formats, add mp4 (you can also add a star after mp4 and remove the star after avi to make mp4 the default format)</p>                    Hit save</p>                    Now you should be able to add your cams and record in mp4 x264 format</p>                    Important:</p>                    </p>                    The web gui will be available at http://serverip:port/zm</p>                    On first start, open zoneminder settings, go to the paths tab and enter the following for PATH_ZMS: /zm/cgi-bin/nph-zms</p>                        The default timezone for php is set as America/New_York if you would like to change it, edit the php.ini in the config folder. Here's a list of available timezone options: http://php.net/manual/en/timezones.php",
        "state": "available",
        "version": "1.0",
        "link": "/zm",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "ZoneMinder: Free, open-source software to control IP, USB and Analog (CCTV) cameras (v1.29) - please note this runs as privileged in docker (to set shm to a higher amount)"
    },
    "model": "storageadmin.rockon",
    "pk": 13
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/sonarr/",
        "volume_add_support": true,
        "name": "Sonarr",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users."
    },
    "model": "storageadmin.rockon",
    "pk": 14
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/deluge/",
        "volume_add_support": true,
        "name": "Deluge",
        "more_info": "Default username: admin<br>Default password: deluge.",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Deluge is a movie downloader for bittorrent users."
    },
    "model": "storageadmin.rockon",
    "pk": 15
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/dbarton/utorrent/",
        "volume_add_support": true,
        "name": "utorrent",
        "more_info": "<h2><font color=#9ACD32><strong>uTorrent WebUI Logins</strong></font></h2><p><strong><u>Username:</u></strong> admin<br> <u><strong>Password:</strong></u> (Leave it blank)<br> You can always change the logins after your first sign in, go to settings >> WebUI.</p>",
        "state": "available",
        "version": "1.0",
        "link": "gui",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "BitTorrent Client by [dbarton and Mahmoud87]"
    },
    "model": "storageadmin.rockon",
    "pk": 16
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/radarr/",
        "volume_add_support": true,
        "name": "Radarr",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Radarr is a PVR for Movies on Usenet and Torrents"
    },
    "model": "storageadmin.rockon",
    "pk": 17
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/plexpy/",
        "volume_add_support": true,
        "name": "Plexpy",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Plexpy Is a Python-based Plex Usage tracker"
    },
    "model": "storageadmin.rockon",
    "pk": 18
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/plex/",
        "volume_add_support": true,
        "name": "Plex",
        "more_info": "<h4>Adding more media to Plex.</h4><p>You can add more Shares(with media) to Plex from the settings wizard of this Rock-on. Then, from Plex WebUI, you can update and re-index your library.</p>",
        "state": "available",
        "version": "1.0",
        "link": "web",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Plex media server by Linuxserver.io"
    },
    "model": "storageadmin.rockon",
    "pk": 19
},
{
    "fields": {
        "status": "stopped",
        "website": "https://www.ecodms.de/",
        "volume_add_support": false,
        "name": "ecoDMS",
        "more_info": "Maybe your system does not have enough entropy available for running ecoDMS. You can check with \"cat /proc/sys/kernel/random/entropy_avai\" on the command line. Values lower than 200 are realy bad. In this case install and enable haveged service.",
        "state": "available",
        "version": "16.09 (eleanor)",
        "link": "",
        "https": false,
        "ui": true,
        "icon": "https://hub.docker.com/v2/users/ecodms/avatar/",
        "description": "ecoDMS document management system"
    },
    "model": "storageadmin.rockon",
    "pk": 20
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/muximux/",
        "volume_add_support": true,
        "name": "Muximux",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "This is a lightweight portal to view & manage your HTPC apps."
    },
    "model": "storageadmin.rockon",
    "pk": 21
},
{
    "fields": {
        "status": "stopped",
        "website": "https://rocket.chat/",
        "volume_add_support": true,
        "name": "Rocket.Chat",
        "more_info": "<h4>Setting up the application</h4><p>Go after installation to the Rocket.Chat web interface for administration of your RocketChat installation.</p>",
        "state": "available",
        "version": "0.54.2",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Rocket.Chat"
    },
    "model": "storageadmin.rockon",
    "pk": 22
},
{
    "fields": {
        "status": "stopped",
        "website": "https://syncthing.net/",
        "volume_add_support": true,
        "name": "Syncthing",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": true,
        "ui": true,
        "icon": null,
        "description": "Continuous File Synchronization by Linuxserver.io"
    },
    "model": "storageadmin.rockon",
    "pk": 23
},
{
    "fields": {
        "status": "stopped",
        "website": "http://mysqueezebox.com",
        "volume_add_support": true,
        "name": "Logitech Squeezebox",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Server for Squeezebox Devices"
    },
    "model": "storageadmin.rockon",
    "pk": 24
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/mylar/",
        "volume_add_support": false,
        "name": "Mylar",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": "https://raw.githubusercontent.com/evilhero/mylar/master/data/images/favicon.ico",
        "description": "Mylar is an automated Comic Book (cbr/cbz) downloader program heavily-based on the Headphones template and logic "
    },
    "model": "storageadmin.rockon",
    "pk": 25
},
{
    "fields": {
        "status": "stopped",
        "website": "https://ghost.org",
        "volume_add_support": false,
        "name": "Ghost",
        "more_info": "navigate to the ui link for the admin site or go to the base url for the public facing site",
        "state": "available",
        "version": "1.0",
        "link": "/ghost",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "ghost: A publishing platform for professional bloggers"
    },
    "model": "storageadmin.rockon",
    "pk": 26
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/headphones/",
        "volume_add_support": true,
        "name": "Headphones",
        "more_info": "<h4>Setting up the application</h4><p>Go after installation to the Headphones web interface to configure your Headphones installation.</p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Headphones is an automated music downloader for NZB and Torrent."
    },
    "model": "storageadmin.rockon",
    "pk": 27
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/hydra/",
        "volume_add_support": true,
        "name": "NZBHydra",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "NZBHydra is a meta search for NZB indexers."
    },
    "model": "storageadmin.rockon",
    "pk": 28
},
{
    "fields": {
        "status": "stopped",
        "website": "https://www.resilio.com/",
        "volume_add_support": true,
        "name": "Resilio Sync",
        "more_info": "<h4>Note about mapping Rockstor Shares</h4><p>Resilio Sync supports mapping more Shares into the Rock-On via the Add Storage button. But, the Rock-on Directory must be a subdirectory of /mnt/mounted_folders. Eg: /mnt/mounted_folders/Photos. Shares mapped to other directories will not be visible.</p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Fast, private file sharing for teams and individuals."
    },
    "model": "storageadmin.rockon",
    "pk": 29
},
{
    "fields": {
        "status": "stopped",
        "website": "https://www.getsync.com/",
        "volume_add_support": true,
        "name": "BTSync",
        "more_info": "<h4>Note about mapping Rockstor Shares</h4><p>BTSync supports mapping more Shares into the Rock-On via the Add Storage button. But, the Rock-on Directory must be a subdirectory of /mnt/mounted_folders. Eg: /mnt/mounted_folders/Photos. Shares mapped to other directories will not be visible.</p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "BitTorrent Sync"
    },
    "model": "storageadmin.rockon",
    "pk": 30
},
{
    "fields": {
        "status": "stopped",
        "website": "http://www.transmissionbt.com/",
        "volume_add_support": true,
        "name": "Transmission",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Open Source BitTorrent client"
    },
    "model": "storageadmin.rockon",
    "pk": 31
},
{
    "fields": {
        "status": "stopped",
        "website": "https://www.collaboraoffice.com/code/",
        "volume_add_support": false,
        "name": "collabora-online",
        "more_info": "",
        "state": "available",
        "version": "1.0.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Collabora Online is a LibreOffice-based online office suite that can be integrated with owncloud/nextcloud."
    },
    "model": "storageadmin.rockon",
    "pk": 32
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/sickrage/",
        "volume_add_support": true,
        "name": "Sickrage",
        "more_info": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
        "state": "available",
        "version": "alpha",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Automatic Video Library Manager for TV Shows, by Linuxserver.io"
    },
    "model": "storageadmin.rockon",
    "pk": 33
},
{
    "fields": {
        "status": "stopped",
        "website": "http://nzbget.net/",
        "volume_add_support": true,
        "name": "NZBGet",
        "more_info": "<h4>Default username: nzbget</p>Default password: tegbzn6789",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "The most efficient usenet downloader."
    },
    "model": "storageadmin.rockon",
    "pk": 34
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/cops/",
        "volume_add_support": true,
        "name": "COPS",
        "more_info": "<h4>Unlike other implementations of COPS in a docker container, the linuxserver version gives you access to config_local.php in /config to customise your install to suit your needs, including details of your email account etc to enable emailing of books, it also includes the dependencies required to directly view epub books in your browser.",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices."
    },
    "model": "storageadmin.rockon",
    "pk": 35
},
{
    "fields": {
        "status": "stopped",
        "website": "https://home-assistant.io/",
        "volume_add_support": false,
        "name": "Home Assistant",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Home Assistant is an open-source home automation platform running on Python 3. Track and control all devices at home and automate control."
    },
    "model": "storageadmin.rockon",
    "pk": 36
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/geldim/https-redirect/",
        "volume_add_support": false,
        "name": "HTTP to HTTPS redirect",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": false,
        "icon": null,
        "description": "Access the Rockstor Admin Web UI without having to remember to type https://"
    },
    "model": "storageadmin.rockon",
    "pk": 37
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/jumanjiman/tftp-hpa/",
        "volume_add_support": true,
        "name": "TFTP server",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": false,
        "icon": null,
        "description": "tftp server"
    },
    "model": "storageadmin.rockon",
    "pk": 38
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/janeczku/dropbox/",
        "volume_add_support": false,
        "name": "dropbox",
        "more_info": "After installed visit /var/logs/messages and look for a line similar to 'DATETIME HOSTNAME journal: Please visit https://www.dropbox.com/cli_link_nonce?nonce=CODE to link this device.'",
        "state": "available",
        "version": "3.18.1",
        "link": null,
        "https": false,
        "ui": false,
        "icon": null,
        "description": "Run Dropbox inside Docker. Fully working with local host folder mount or inter-container linking (via --volumes-from)."
    },
    "model": "storageadmin.rockon",
    "pk": 39
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/lazylibrarian/",
        "volume_add_support": true,
        "name": "LazyLibrarian",
        "more_info": "<h4>Setting up the application</h4><p>Go to the web interface to configure your lazylibrarian installation.</p>",
        "state": "available",
        "version": "37",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "lazylibrarian is an automated ebook downloader for NZB and Torrent."
    },
    "model": "storageadmin.rockon",
    "pk": 40
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/mariadb/",
        "volume_add_support": true,
        "name": "MariaDB",
        "more_info": "<h4>Important locations</h4><p>Configuration file:<code>/config/custom.cnf</code></p> <p>Databases: <code>/config/databases</code></p> <p>Logs: <code>/config/log/mysql/</code></p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": false,
        "icon": null,
        "description": "MariaDB, relational database management system."
    },
    "model": "storageadmin.rockon",
    "pk": 41
},
{
    "fields": {
        "status": "stopped",
        "website": "https://owncloud.org/",
        "volume_add_support": false,
        "name": "OwnCloud-Official",
        "more_info": "<p>Default username for your OwnCloud UI is<code>admin</code>and password is<code>changeme</code></p>",
        "state": "available",
        "version": "latest",
        "link": "",
        "https": false,
        "ui": true,
        "icon": "https://owncloud.org/wp-content/themes/owncloudorgnew/assets/img/common/logo_owncloud.svg",
        "description": "Secure file sharing and hosting"
    },
    "model": "storageadmin.rockon",
    "pk": 42
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/intersoftlab/duplicati/",
        "volume_add_support": true,
        "name": "Duplicati2-canary",
        "more_info": null,
        "state": "available",
        "version": "2-canary",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Duplicati is a backup client that securely stores encrypted, incremental, compressed backups on cloud storage services and remote file servers."
    },
    "model": "storageadmin.rockon",
    "pk": 43
},
{
    "fields": {
        "status": "stopped",
        "website": "https://gogs.io/",
        "volume_add_support": false,
        "name": "Gogs",
        "more_info": "<h4>Authentication</h4><p>Gogs will take you through its configuration when first run. You can set an admin username and password then; otherwise, the first user to register will automatically get administrator rights.</p><h4>Configuration</h4><p>Change Domain to reflect your Rockstor server name or IP address. The SSH Port is used for git<code>ssh</code>access and should be changed to the port you configured (3022 by default). Similarly, the HTTP Port (3000 by default) may also require changing. Finally, the Application URL is used for git<code>http</code>access and should reflect the Rockstor server and Gogs Rock-on port.</p><p>Use the SQLite3 database if you don't want to use an external database. Do <em>not</em> change the repository root path (<code>/data/git/gogs-repositories</code>) or the git storage share won't work.</p><h4>Afterwards</h4><p>You can inspect and where necessary modify your configuration in <code>gogs/conf/app.ini</code> on the gogs configuration Share.</p><p>The git Share will host all your git repositories in standard (bare) format, and repositories for any wikis that you create.<p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Go Git Service, a lightweight Git version control server and front end"
    },
    "model": "storageadmin.rockon",
    "pk": 44
},
{
    "fields": {
        "status": "stopped",
        "website": "https://emby.media/",
        "volume_add_support": true,
        "name": "EmbyServer",
        "more_info": "<h4>Adding media to Emby.</h4><p>You can add Shares(with media) to Emby from the settings wizard of this Rock-on. Then, from Emby WebUI, you can update and re-index your library.</p>",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Emby media server"
    },
    "model": "storageadmin.rockon",
    "pk": 45
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/jacobalberty/unifi/",
        "volume_add_support": false,
        "name": "Ubiquiti Unifi",
        "more_info": "This is a containerized version of Ubiquiti Network's Unifi Controller.",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Unifi Access Point controller"
    },
    "model": "storageadmin.rockon",
    "pk": 46
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/haugene/transmission-openvpn/",
        "volume_add_support": false,
        "name": "Transmission - OpenVPN",
        "more_info": "<p>See the container's documentation for a list of included VPN provider profiles. If your provider isn't included, set it up as a custom provider, by putting the relevant files in the <code>Custom profile</code> share.</p>",
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Docker container running Transmission torrent client with WebUI while connecting to OpenVPN"
    },
    "model": "storageadmin.rockon",
    "pk": 47
},
{
    "fields": {
        "status": "stopped",
        "website": "https://jenkins-ci.org/",
        "volume_add_support": false,
        "name": "JenkinsCI",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Leading open source automation server"
    },
    "model": "storageadmin.rockon",
    "pk": 48
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/diginc/pi-hole/",
        "volume_add_support": false,
        "name": "Pi-Hole",
        "more_info": "<h4>PI-HOLE\u00e2\u0084\u00a2: A BLACK HOLE FOR INTERNET ADVERTISEMENTS</h4><p><b>Admin page</b></p><p>To access admin interface go to URL: http://[SERVERIP]/Admin</p><p>If you have different port than 80 you need to specify that in the URL.</p><p><b>Block Over 100,000 Ad-serving Domains</b></p><p>Known ad-serving domains are pulled from third party sources and compiled into one list.</p><p><b>Block Advertisements On Any Device</b></p><p>Network-level blocking allows any device to block ads, regardless of hardware or OS.</p><p><b>Improve Overall Network Performance</b></p><p>Since ads are blocked before they are downloaded, your network will perform better.</p>",
        "state": "available",
        "version": "1.0",
        "link": "admin",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "PI-Hole by DigInc"
    },
    "model": "storageadmin.rockon",
    "pk": 49
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/couchpotato/",
        "volume_add_support": true,
        "name": "CouchPotato",
        "more_info": "<h4>Default username: couchpotato</p>Default password: couchpotato",
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "couchpotato is a movie downloader for usenet and bittorrent users."
    },
    "model": "storageadmin.rockon",
    "pk": 50
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/gsm-ts3/",
        "volume_add_support": false,
        "name": "Teamspeak3",
        "more_info": "<h4>You need to get the previliged key using system console to get serveradmin access</h4></p>1. Open system console (don't forget to start the service) or use SSH</p>2. cd /mnt2/[sharename]/serverfiles/logs</p>3. grep \"token\" ./*",
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": false,
        "icon": null,
        "description": "VoIP software designed with security in mind, featuring crystal clear voice quality, endless customization options, and scalabilty up to thousands of simultaneous users."
    },
    "model": "storageadmin.rockon",
    "pk": 51
},
{
    "fields": {
        "status": "stopped",
        "website": "https://hub.docker.com/r/linuxserver/jackett/",
        "volume_add_support": true,
        "name": "Jackett",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": "",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "Jackett works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc)."
    },
    "model": "storageadmin.rockon",
    "pk": 52
},
{
    "fields": {
        "status": "stopped",
        "website": "https://openvpn.net/",
        "volume_add_support": false,
        "name": "OpenVPN",
        "more_info": "<h4>Additional steps are required by this Rock-on.</h4><p>Run these following commands as the<code>root</code>user on your Rockstor system, i.e., via a ssh console.</p><h4><u>Initialize PKI</u>&nbsp;&nbsp;&nbsp;&nbsp;<i>The OpenVPN Rock-on will not start without it.</i></h4><code>/opt/rockstor/bin/ovpn-initpki</code><h4><u>Generate a client certificate</u>&nbsp;&nbsp;&nbsp;&nbsp;<i>One for each client</i></h4><code>/opt/rockstor/bin/ovpn-client-gen</code><br><h4><u>Retrieve client configuration</u>&nbsp;&nbsp;&nbsp;&nbsp<i>For any one of your clients. The resulting .ovpn file can be used to connect to this OpenVPN server.</i></h4><code>/opt/rockstor/bin/ovpn-client-print</code><h4><u>Configure firewall</u></h4><p>If your Rockstor system is behind a firewall, you will need to configure it to allow OpenVPN traffic to forward to your Rockstor system.</p>",
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": false,
        "icon": "https://openvpn.net/",
        "description": "Open Source VPN server"
    },
    "model": "storageadmin.rockon",
    "pk": 53
},
{
    "fields": {
        "status": "stopped",
        "website": "http://felenasoft.com/xeoma/",
        "volume_add_support": true,
        "name": "Xeoma Video Surveillance",
        "more_info": null,
        "state": "available",
        "version": "1.0",
        "link": null,
        "https": false,
        "ui": false,
        "icon": null,
        "description": "Xeoma Video Surveillance"
    },
    "model": "storageadmin.rockon",
    "pk": 54
},
{
    "fields": {
        "status": "stopped",
        "website": "https://github.com/magicalyak/docker-zoneminder/tree/v1.30",
        "volume_add_support": true,
        "name": "ZoneMinder-1.30",
        "more_info": "</h4>Tips and Setup Instructions:</h4></p>        </p>        This container includes mysql, no need for a separate mysql/mariadb container</p>            All settings and library files are stored outside of the container and they are preserved when this docker is updated or re-installed (change the variable /path/to/config in the run command to a location of your choice)</p>            This container includes avconv (ffmpeg variant) and cambozola but they need to be enabled in the settings. In the WebUI, click on Options in the top right corner and go to the Images tab</p>            Click on the box next to OPT_Cambozola to enable</p>            Click on the box next OPT_FFMPEG to enable ffmpeg</p>            Enter the following for ffmpeg path: /usr/bin/avconv</p>                Enter the following for ffmpeg output options: -r 30 -vcodec libx264 -threads 2 -b 2000k -minrate 800k -maxrate 5000k (you can change these options to your liking)</p>                    Next to ffmpeg_formats, add mp4 (you can also add a star after mp4 and remove the star after avi to make mp4 the default format)</p>                    Hit save</p>                    Now you should be able to add your cams and record in mp4 x264 format</p>                    Important:</p>                    </p>                    The web gui will be available at http://serverip:port/zm</p>                    On first start, open zoneminder settings, go to the paths tab and enter the following for PATH_ZMS: /zm/cgi-bin/nph-zms</p>                        The default timezone for php is set as America/New_York if you would like to change it, edit the php.ini in the config folder. Here's a list of available timezone options: http://php.net/manual/en/timezones.php",
        "state": "available",
        "version": "1.30",
        "link": "/zm",
        "https": false,
        "ui": true,
        "icon": null,
        "description": "ZoneMinder: Free, open-source software to control IP, USB and Analog (CCTV) cameras (v1.30) - please note this runs as privileged in docker (to set shm to a higher amount)"
    },
    "model": "storageadmin.rockon",
    "pk": 55
},
{
    "fields": {
        "status": "stopped",
        "website": "https://owncloud.org/",
        "volume_add_support": false,
        "name": "owncloudHTTPS",
        "more_info": "<p>To set up owncloud with SSL follow <a href='https://forum.rockstor.com/t/owncloud-ssl-offical-image-guide' target='_blank'>this guide.</a> <br> Please notice, that you can't access the Web-GUI of owncloud before you have completed the setup described in the Guide!</p>",
        "state": "available",
        "version": "latest",
        "link": "",
        "https": true,
        "ui": true,
        "icon": "https://owncloud.org/wp-content/themes/owncloudorgnew/assets/img/common/logo_owncloud.svg",
        "description": "Secure file sharing and hosting"
    },
    "model": "storageadmin.rockon",
    "pk": 56
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "illi/docker-haproxy-letsencrypt"
    },
    "model": "storageadmin.dimage",
    "pk": 1
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/sickbeard"
    },
    "model": "storageadmin.dimage",
    "pk": 2
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/ombi"
    },
    "model": "storageadmin.dimage",
    "pk": 3
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "kylemanna/bitcoind"
    },
    "model": "storageadmin.dimage",
    "pk": 4
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "hurricane/subsonic"
    },
    "model": "storageadmin.dimage",
    "pk": 5
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "discourse/discourse"
    },
    "model": "storageadmin.dimage",
    "pk": 6
},
{
    "fields": {
        "repo": "na",
        "tag": "9.5",
        "name": "postgres"
    },
    "model": "storageadmin.dimage",
    "pk": 7
},
{
    "fields": {
        "repo": "na",
        "tag": "8.2.1",
        "name": "pschmitt/owncloud"
    },
    "model": "storageadmin.dimage",
    "pk": 8
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "jrcs/crashplan"
    },
    "model": "storageadmin.dimage",
    "pk": 9
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "gitlab/gitlab-ce"
    },
    "model": "storageadmin.dimage",
    "pk": 10
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/freshrss"
    },
    "model": "storageadmin.dimage",
    "pk": 11
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/sabnzbd"
    },
    "model": "storageadmin.dimage",
    "pk": 12
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/booksonic"
    },
    "model": "storageadmin.dimage",
    "pk": 13
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "aptalca/zoneminder-1.29"
    },
    "model": "storageadmin.dimage",
    "pk": 14
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/sonarr"
    },
    "model": "storageadmin.dimage",
    "pk": 15
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/deluge"
    },
    "model": "storageadmin.dimage",
    "pk": 16
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "dbarton/utorrent"
    },
    "model": "storageadmin.dimage",
    "pk": 17
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/radarr"
    },
    "model": "storageadmin.dimage",
    "pk": 18
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/plexpy"
    },
    "model": "storageadmin.dimage",
    "pk": 19
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/plex"
    },
    "model": "storageadmin.dimage",
    "pk": 20
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "ecodms/allinone-16.09"
    },
    "model": "storageadmin.dimage",
    "pk": 21
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/muximux"
    },
    "model": "storageadmin.dimage",
    "pk": 22
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "rocketchat/rocket.chat"
    },
    "model": "storageadmin.dimage",
    "pk": 23
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "mongo"
    },
    "model": "storageadmin.dimage",
    "pk": 24
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/syncthing"
    },
    "model": "storageadmin.dimage",
    "pk": 25
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "tdeckers/logitechmediaserver"
    },
    "model": "storageadmin.dimage",
    "pk": 26
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/mylar"
    },
    "model": "storageadmin.dimage",
    "pk": 27
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "ghost"
    },
    "model": "storageadmin.dimage",
    "pk": 28
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/headphones"
    },
    "model": "storageadmin.dimage",
    "pk": 29
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/hydra"
    },
    "model": "storageadmin.dimage",
    "pk": 30
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "resilio/sync"
    },
    "model": "storageadmin.dimage",
    "pk": 31
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "bittorrent/sync"
    },
    "model": "storageadmin.dimage",
    "pk": 32
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "dperson/transmission"
    },
    "model": "storageadmin.dimage",
    "pk": 33
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "collabora/code"
    },
    "model": "storageadmin.dimage",
    "pk": 34
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/sickrage"
    },
    "model": "storageadmin.dimage",
    "pk": 35
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/nzbget"
    },
    "model": "storageadmin.dimage",
    "pk": 36
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/cops"
    },
    "model": "storageadmin.dimage",
    "pk": 37
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "homeassistant/home-assistant"
    },
    "model": "storageadmin.dimage",
    "pk": 38
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "geldim/https-redirect"
    },
    "model": "storageadmin.dimage",
    "pk": 39
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "pghalliday/tftp"
    },
    "model": "storageadmin.dimage",
    "pk": 40
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "janeczku/dropbox"
    },
    "model": "storageadmin.dimage",
    "pk": 41
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/lazylibrarian"
    },
    "model": "storageadmin.dimage",
    "pk": 42
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/mariadb"
    },
    "model": "storageadmin.dimage",
    "pk": 43
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "owncloud"
    },
    "model": "storageadmin.dimage",
    "pk": 44
},
{
    "fields": {
        "repo": "na",
        "tag": "canary",
        "name": "intersoftlab/duplicati"
    },
    "model": "storageadmin.dimage",
    "pk": 45
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "gogs/gogs"
    },
    "model": "storageadmin.dimage",
    "pk": 46
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "emby/embyserver"
    },
    "model": "storageadmin.dimage",
    "pk": 47
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "jacobalberty/unifi"
    },
    "model": "storageadmin.dimage",
    "pk": 48
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "haugene/transmission-openvpn"
    },
    "model": "storageadmin.dimage",
    "pk": 49
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "jenkins"
    },
    "model": "storageadmin.dimage",
    "pk": 50
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "diginc/pi-hole"
    },
    "model": "storageadmin.dimage",
    "pk": 51
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/couchpotato"
    },
    "model": "storageadmin.dimage",
    "pk": 52
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/gsm-ts3"
    },
    "model": "storageadmin.dimage",
    "pk": 53
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "linuxserver/jackett"
    },
    "model": "storageadmin.dimage",
    "pk": 54
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "busybox"
    },
    "model": "storageadmin.dimage",
    "pk": 55
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "kylemanna/openvpn"
    },
    "model": "storageadmin.dimage",
    "pk": 56
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "coppit/xeoma"
    },
    "model": "storageadmin.dimage",
    "pk": 57
},
{
    "fields": {
        "repo": "na",
        "tag": "latest",
        "name": "magicalyak/docker-zoneminder"
    },
    "model": "storageadmin.dimage",
    "pk": 58
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 1,
        "uid": null,
        "dimage": 1,
        "name": "haproxy-letsencrypt"
    },
    "model": "storageadmin.dcontainer",
    "pk": 1
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 2,
        "uid": null,
        "dimage": 2,
        "name": "sickbeard"
    },
    "model": "storageadmin.dcontainer",
    "pk": 2
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 3,
        "uid": null,
        "dimage": 3,
        "name": "ombi"
    },
    "model": "storageadmin.dcontainer",
    "pk": 3
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 4,
        "uid": null,
        "dimage": 4,
        "name": "bitcoind"
    },
    "model": "storageadmin.dcontainer",
    "pk": 4
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 5,
        "uid": null,
        "dimage": 5,
        "name": "subsonic"
    },
    "model": "storageadmin.dcontainer",
    "pk": 5
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 6,
        "uid": null,
        "dimage": 6,
        "name": "discourse"
    },
    "model": "storageadmin.dcontainer",
    "pk": 6
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 7,
        "uid": null,
        "dimage": 7,
        "name": "owncloud-postgres"
    },
    "model": "storageadmin.dcontainer",
    "pk": 7
},
{
    "fields": {
        "launch_order": 2,
        "rockon": 7,
        "uid": null,
        "dimage": 8,
        "name": "owncloud"
    },
    "model": "storageadmin.dcontainer",
    "pk": 8
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 8,
        "uid": null,
        "dimage": 9,
        "name": "crashplan"
    },
    "model": "storageadmin.dcontainer",
    "pk": 9
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 9,
        "uid": null,
        "dimage": 10,
        "name": "gitlab-ce"
    },
    "model": "storageadmin.dcontainer",
    "pk": 10
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 10,
        "uid": null,
        "dimage": 11,
        "name": "linuxserver-freshrss"
    },
    "model": "storageadmin.dcontainer",
    "pk": 11
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 11,
        "uid": null,
        "dimage": 12,
        "name": "sabnzb"
    },
    "model": "storageadmin.dcontainer",
    "pk": 12
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 12,
        "uid": null,
        "dimage": 13,
        "name": "booksonic"
    },
    "model": "storageadmin.dcontainer",
    "pk": 13
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 13,
        "uid": null,
        "dimage": 14,
        "name": "zoneminder"
    },
    "model": "storageadmin.dcontainer",
    "pk": 14
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 14,
        "uid": null,
        "dimage": 15,
        "name": "Sonarr"
    },
    "model": "storageadmin.dcontainer",
    "pk": 15
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 15,
        "uid": null,
        "dimage": 16,
        "name": "Deluge"
    },
    "model": "storageadmin.dcontainer",
    "pk": 16
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 16,
        "uid": null,
        "dimage": 17,
        "name": "utorrent"
    },
    "model": "storageadmin.dcontainer",
    "pk": 17
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 17,
        "uid": null,
        "dimage": 18,
        "name": "radarr"
    },
    "model": "storageadmin.dcontainer",
    "pk": 18
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 18,
        "uid": null,
        "dimage": 19,
        "name": "plexpy-linuxserver.io"
    },
    "model": "storageadmin.dcontainer",
    "pk": 19
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 19,
        "uid": null,
        "dimage": 20,
        "name": "plex-linuxserver.io"
    },
    "model": "storageadmin.dcontainer",
    "pk": 20
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 20,
        "uid": null,
        "dimage": 21,
        "name": "ecodms"
    },
    "model": "storageadmin.dcontainer",
    "pk": 21
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 21,
        "uid": null,
        "dimage": 22,
        "name": "muximux"
    },
    "model": "storageadmin.dcontainer",
    "pk": 22
},
{
    "fields": {
        "launch_order": 2,
        "rockon": 22,
        "uid": null,
        "dimage": 23,
        "name": "rocketchat"
    },
    "model": "storageadmin.dcontainer",
    "pk": 23
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 22,
        "uid": null,
        "dimage": 24,
        "name": "mongodb.rocketchat"
    },
    "model": "storageadmin.dcontainer",
    "pk": 24
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 23,
        "uid": null,
        "dimage": 25,
        "name": "syncthing"
    },
    "model": "storageadmin.dcontainer",
    "pk": 25
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 24,
        "uid": null,
        "dimage": 26,
        "name": "logitechsqueezebox"
    },
    "model": "storageadmin.dcontainer",
    "pk": 26
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 25,
        "uid": null,
        "dimage": 27,
        "name": "mylar"
    },
    "model": "storageadmin.dcontainer",
    "pk": 27
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 26,
        "uid": null,
        "dimage": 28,
        "name": "ghost"
    },
    "model": "storageadmin.dcontainer",
    "pk": 28
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 27,
        "uid": null,
        "dimage": 29,
        "name": "linuxserver-headphones"
    },
    "model": "storageadmin.dcontainer",
    "pk": 29
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 28,
        "uid": null,
        "dimage": 30,
        "name": "nzbhydra"
    },
    "model": "storageadmin.dcontainer",
    "pk": 30
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 29,
        "uid": null,
        "dimage": 31,
        "name": "resilio-sync"
    },
    "model": "storageadmin.dcontainer",
    "pk": 31
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 30,
        "uid": null,
        "dimage": 32,
        "name": "bittorrent-btsync"
    },
    "model": "storageadmin.dcontainer",
    "pk": 32
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 31,
        "uid": null,
        "dimage": 33,
        "name": "transmission"
    },
    "model": "storageadmin.dcontainer",
    "pk": 33
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 32,
        "uid": null,
        "dimage": 34,
        "name": "collabora"
    },
    "model": "storageadmin.dcontainer",
    "pk": 34
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 33,
        "uid": null,
        "dimage": 35,
        "name": "sickrage"
    },
    "model": "storageadmin.dcontainer",
    "pk": 35
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 34,
        "uid": null,
        "dimage": 36,
        "name": "nzbget"
    },
    "model": "storageadmin.dcontainer",
    "pk": 36
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 35,
        "uid": null,
        "dimage": 37,
        "name": "cops"
    },
    "model": "storageadmin.dcontainer",
    "pk": 37
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 36,
        "uid": -1,
        "dimage": 38,
        "name": "home-assistant"
    },
    "model": "storageadmin.dcontainer",
    "pk": 38
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 37,
        "uid": null,
        "dimage": 39,
        "name": "redirect-http-to-https"
    },
    "model": "storageadmin.dcontainer",
    "pk": 39
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 38,
        "uid": null,
        "dimage": 40,
        "name": "tftpserver"
    },
    "model": "storageadmin.dcontainer",
    "pk": 40
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 39,
        "uid": null,
        "dimage": 41,
        "name": "dropbox"
    },
    "model": "storageadmin.dcontainer",
    "pk": 41
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 40,
        "uid": null,
        "dimage": 42,
        "name": "linuxserver-lazylibrarian"
    },
    "model": "storageadmin.dcontainer",
    "pk": 42
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 41,
        "uid": null,
        "dimage": 43,
        "name": "linuxserver-mariadb"
    },
    "model": "storageadmin.dcontainer",
    "pk": 43
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 42,
        "uid": null,
        "dimage": 44,
        "name": "owncloud-official"
    },
    "model": "storageadmin.dcontainer",
    "pk": 44
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 43,
        "uid": null,
        "dimage": 45,
        "name": "duplicati2-canary"
    },
    "model": "storageadmin.dcontainer",
    "pk": 45
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 44,
        "uid": null,
        "dimage": 46,
        "name": "gogs"
    },
    "model": "storageadmin.dcontainer",
    "pk": 46
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 45,
        "uid": null,
        "dimage": 47,
        "name": "embyserver"
    },
    "model": "storageadmin.dcontainer",
    "pk": 47
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 46,
        "uid": null,
        "dimage": 48,
        "name": "unifi"
    },
    "model": "storageadmin.dcontainer",
    "pk": 48
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 47,
        "uid": null,
        "dimage": 49,
        "name": "transmission-openvpn"
    },
    "model": "storageadmin.dcontainer",
    "pk": 49
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 48,
        "uid": -1,
        "dimage": 50,
        "name": "jenkins"
    },
    "model": "storageadmin.dcontainer",
    "pk": 50
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 49,
        "uid": null,
        "dimage": 51,
        "name": "pi-hole-diginc"
    },
    "model": "storageadmin.dcontainer",
    "pk": 51
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 50,
        "uid": null,
        "dimage": 52,
        "name": "couchpotato"
    },
    "model": "storageadmin.dcontainer",
    "pk": 52
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 51,
        "uid": null,
        "dimage": 53,
        "name": "Teamspeak3"
    },
    "model": "storageadmin.dcontainer",
    "pk": 53
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 52,
        "uid": null,
        "dimage": 54,
        "name": "jackett"
    },
    "model": "storageadmin.dcontainer",
    "pk": 54
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 53,
        "uid": null,
        "dimage": 55,
        "name": "ovpn-data"
    },
    "model": "storageadmin.dcontainer",
    "pk": 55
},
{
    "fields": {
        "launch_order": 2,
        "rockon": 53,
        "uid": null,
        "dimage": 56,
        "name": "openvpn"
    },
    "model": "storageadmin.dcontainer",
    "pk": 56
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 54,
        "uid": null,
        "dimage": 57,
        "name": "xeoma"
    },
    "model": "storageadmin.dcontainer",
    "pk": 57
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 55,
        "uid": null,
        "dimage": 58,
        "name": "zoneminder-1.30"
    },
    "model": "storageadmin.dcontainer",
    "pk": 58
},
{
    "fields": {
        "launch_order": 1,
        "rockon": 56,
        "uid": null,
        "dimage": 44,
        "name": "owncloudHTTPS"
    },
    "model": "storageadmin.dcontainer",
    "pk": 59
},
{
    "fields": {
        "source": 24,
        "destination": 23,
        "name": "mongodb.rocketchat"
    },
    "model": "storageadmin.dcontainerlink",
    "pk": 2
},
{
    "fields": {
        "source": 7,
        "destination": 8,
        "name": "db"
    },
    "model": "storageadmin.dcontainerlink",
    "pk": 32
},
{
    "fields": {
        "container": 1,
        "description": "Https port.",
        "uiport": true,
        "hostp_default": 1443,
        "label": "Https port",
        "hostp": 1443,
        "protocol": "tcp",
        "containerp": 443
    },
    "model": "storageadmin.dport",
    "pk": 1
},
{
    "fields": {
        "container": 1,
        "description": "Http port. Needs to be reachable on port 80 from the internet for letsencrypt hostname validation. Configure your router accordingly.",
        "uiport": true,
        "hostp_default": 1080,
        "label": "Http port",
        "hostp": 1080,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 2
},
{
    "fields": {
        "container": 2,
        "description": "Port for Sickbeard Web interface. Suggested default: 8081.",
        "uiport": true,
        "hostp_default": 8081,
        "label": "WebUI port",
        "hostp": 8081,
        "protocol": null,
        "containerp": 8081
    },
    "model": "storageadmin.dport",
    "pk": 3
},
{
    "fields": {
        "container": 3,
        "description": "Ombi WebUI port. Suggested default: 3579",
        "uiport": true,
        "hostp_default": 3579,
        "label": "WebUI port",
        "hostp": 3579,
        "protocol": "tcp",
        "containerp": 3579
    },
    "model": "storageadmin.dport",
    "pk": 4
},
{
    "fields": {
        "container": 4,
        "description": "JSONRPC port",
        "uiport": false,
        "hostp_default": 28332,
        "label": "The JSONRPC server allows to query and control the server remotely",
        "hostp": 28332,
        "protocol": "tcp",
        "containerp": 8332
    },
    "model": "storageadmin.dport",
    "pk": 5
},
{
    "fields": {
        "container": 4,
        "description": "Listening port",
        "uiport": false,
        "hostp_default": 28333,
        "label": "Port for incoming connections",
        "hostp": 28333,
        "protocol": "tcp",
        "containerp": 8333
    },
    "model": "storageadmin.dport",
    "pk": 6
},
{
    "fields": {
        "container": 5,
        "description": "Webserver Port. Suggested default: 4040.",
        "uiport": true,
        "hostp_default": 4040,
        "label": "Webserver port",
        "hostp": 4040,
        "protocol": "tcp",
        "containerp": 4040
    },
    "model": "storageadmin.dport",
    "pk": 7
},
{
    "fields": {
        "container": 5,
        "description": "Webserver SSL Port. Suggested default: 4050.",
        "uiport": true,
        "hostp_default": 4050,
        "label": "Webserver SSL port",
        "hostp": 4050,
        "protocol": "tcp",
        "containerp": 4050
    },
    "model": "storageadmin.dport",
    "pk": 8
},
{
    "fields": {
        "container": 6,
        "description": "Discourse webserver/forum port. You may need to open it(protocol: tcp) on your firewall. Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8080,
        "label": "Webserver port",
        "hostp": 8080,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 9
},
{
    "fields": {
        "container": 8,
        "description": "OwnCloud WebUI port. Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8082,
        "protocol": "tcp",
        "containerp": 443
    },
    "model": "storageadmin.dport",
    "pk": 10
},
{
    "fields": {
        "container": 9,
        "description": "Backing up from your local computer to your remote computer uses port 4242 by default.",
        "uiport": false,
        "hostp_default": 4242,
        "label": "Backup port",
        "hostp": 4242,
        "protocol": null,
        "containerp": 4242
    },
    "model": "storageadmin.dport",
    "pk": 11
},
{
    "fields": {
        "container": 9,
        "description": "CrashPlan app communicates with the CrashPlan service using port 4243 by default",
        "uiport": false,
        "hostp_default": 4243,
        "label": "Service to App communication",
        "hostp": 4243,
        "protocol": null,
        "containerp": 4243
    },
    "model": "storageadmin.dport",
    "pk": 12
},
{
    "fields": {
        "container": 10,
        "description": "GitLab WebUI port. Suggested default: 8443. Not enabled in docker image by default",
        "uiport": false,
        "hostp_default": 8443,
        "label": "HTTPS WebUI port",
        "hostp": 8443,
        "protocol": "tcp",
        "containerp": 443
    },
    "model": "storageadmin.dport",
    "pk": 13
},
{
    "fields": {
        "container": 10,
        "description": "GitLab WebUI port. Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8098,
        "label": "HTTP WebUI port",
        "hostp": 8083,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 14
},
{
    "fields": {
        "container": 10,
        "description": "GitLab SSH port. Suggested default: 2222",
        "uiport": false,
        "hostp_default": 2222,
        "label": "SSH Gitlab port",
        "hostp": 2222,
        "protocol": "tcp",
        "containerp": 22
    },
    "model": "storageadmin.dport",
    "pk": 15
},
{
    "fields": {
        "container": 11,
        "description": "FreshRSS Web UI Port",
        "uiport": true,
        "hostp_default": 3093,
        "label": "WebUI port",
        "hostp": 3093,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 16
},
{
    "fields": {
        "container": 12,
        "description": "sabnzbget HTTPS WebUI port. Suggested default: 9090",
        "uiport": false,
        "hostp_default": 9090,
        "label": "HTTPS WebUI port",
        "hostp": 9090,
        "protocol": "tcp",
        "containerp": 9090
    },
    "model": "storageadmin.dport",
    "pk": 17
},
{
    "fields": {
        "container": 12,
        "description": "sabnzbget WebUI port. Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8084,
        "protocol": "tcp",
        "containerp": 8080
    },
    "model": "storageadmin.dport",
    "pk": 18
},
{
    "fields": {
        "container": 13,
        "description": "WebUI port. Suggested default: 4040",
        "uiport": true,
        "hostp_default": 4042,
        "label": "WebUI port",
        "hostp": 4041,
        "protocol": null,
        "containerp": 4040
    },
    "model": "storageadmin.dport",
    "pk": 19
},
{
    "fields": {
        "container": 14,
        "description": "Port for running ZoneMinder. You shouldn't open this externally (it's unsecure). Do not use 80 (it will interfere with RockStor)",
        "uiport": true,
        "hostp_default": 8098,
        "label": "ZoneMinder Port",
        "hostp": 8085,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 20
},
{
    "fields": {
        "container": 15,
        "description": "Sonarr WebUI port. Suggested default: 8989",
        "uiport": true,
        "hostp_default": 8989,
        "label": "WebUI port",
        "hostp": 8989,
        "protocol": "tcp",
        "containerp": 8989
    },
    "model": "storageadmin.dport",
    "pk": 21
},
{
    "fields": {
        "container": 16,
        "description": "Deluge WebUI port. Suggested default: 8112",
        "uiport": true,
        "hostp_default": 8112,
        "label": "WebUI port",
        "hostp": 8112,
        "protocol": "tcp",
        "containerp": 8112
    },
    "model": "storageadmin.dport",
    "pk": 22
},
{
    "fields": {
        "container": 16,
        "description": "Deluge Daemon port. Suggested default: 58846",
        "uiport": true,
        "hostp_default": 58846,
        "label": "Daemon port",
        "hostp": 58846,
        "protocol": "tcp",
        "containerp": 58846
    },
    "model": "storageadmin.dport",
    "pk": 23
},
{
    "fields": {
        "container": 17,
        "description": "Port for utorrent Web interface. Suggested default: 8080.",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8086,
        "protocol": "tcp",
        "containerp": 8080
    },
    "model": "storageadmin.dport",
    "pk": 24
},
{
    "fields": {
        "container": 17,
        "description": "Port for incoming data. You may need to open it(protocol: udp) on your firewall. Suggested default: 6881. Should NOT be changed",
        "uiport": false,
        "hostp_default": 6881,
        "label": "uTorrent Incoming Port",
        "hostp": 6881,
        "protocol": null,
        "containerp": 6881
    },
    "model": "storageadmin.dport",
    "pk": 25
},
{
    "fields": {
        "container": 18,
        "description": "Radarr WebUI port. Suggested default: 7878",
        "uiport": true,
        "hostp_default": 7878,
        "label": "WebUI port",
        "hostp": 7878,
        "protocol": "tcp",
        "containerp": 7878
    },
    "model": "storageadmin.dport",
    "pk": 26
},
{
    "fields": {
        "container": 19,
        "description": "WebUI port. Suggested default: 8181",
        "uiport": true,
        "hostp_default": 8181,
        "label": "WebUI port",
        "hostp": 8181,
        "protocol": null,
        "containerp": 8181
    },
    "model": "storageadmin.dport",
    "pk": 27
},
{
    "fields": {
        "container": 20,
        "description": "WebUI port. Suggested default: 32400",
        "uiport": true,
        "hostp_default": 32400,
        "label": "WebUI port",
        "hostp": 32400,
        "protocol": null,
        "containerp": 32400
    },
    "model": "storageadmin.dport",
    "pk": 28
},
{
    "fields": {
        "container": 21,
        "description": "Port for ecoDMS client connection",
        "uiport": false,
        "hostp_default": 17001,
        "label": "Client",
        "hostp": 17001,
        "protocol": "tcp",
        "containerp": 17001
    },
    "model": "storageadmin.dport",
    "pk": 29
},
{
    "fields": {
        "container": 21,
        "description": "ecoDMS WebUI port. Disabled by default. Must be enabled in settings.",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8087,
        "protocol": "tcp",
        "containerp": 8080
    },
    "model": "storageadmin.dport",
    "pk": 30
},
{
    "fields": {
        "container": 22,
        "description": "muximux WebUI port. Suggested default: 80",
        "uiport": true,
        "hostp_default": 80,
        "label": "WebUI port",
        "hostp": 80,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 31
},
{
    "fields": {
        "container": 23,
        "description": "Rocket.Chat WebUI port. Suggested default: 3000",
        "uiport": true,
        "hostp_default": 3000,
        "label": "WebUI port",
        "hostp": 3000,
        "protocol": "tcp",
        "containerp": 3000
    },
    "model": "storageadmin.dport",
    "pk": 32
},
{
    "fields": {
        "container": 25,
        "description": "Port for incoming data. You may need to open it(protocol: tcp) on your firewall. Suggested default: 22000.",
        "uiport": false,
        "hostp_default": 22000,
        "label": "Listening port",
        "hostp": 22000,
        "protocol": "tcp",
        "containerp": 22000
    },
    "model": "storageadmin.dport",
    "pk": 33
},
{
    "fields": {
        "container": 25,
        "description": "Syncthing WebUI port. Suggested default: 8384.",
        "uiport": true,
        "hostp_default": 8384,
        "label": "WebUI port",
        "hostp": 8384,
        "protocol": "tcp",
        "containerp": 8384
    },
    "model": "storageadmin.dport",
    "pk": 34
},
{
    "fields": {
        "container": 25,
        "description": "Port for discovery broadcasts. You may need to open it(protocol: udp) on your firewall. Suggested default: 21027.",
        "uiport": false,
        "hostp_default": 21027,
        "label": "Discovery port",
        "hostp": 21027,
        "protocol": "udp",
        "containerp": 21027
    },
    "model": "storageadmin.dport",
    "pk": 35
},
{
    "fields": {
        "container": 26,
        "description": "SlimProto Port. Suggested default: 3483.",
        "uiport": false,
        "hostp_default": 3483,
        "label": "Slimproto port",
        "hostp": 3483,
        "protocol": null,
        "containerp": 3483
    },
    "model": "storageadmin.dport",
    "pk": 36
},
{
    "fields": {
        "container": 26,
        "description": "CLI Port. Suggested default: 9090.",
        "uiport": false,
        "hostp_default": 9094,
        "label": "CLI port",
        "hostp": 9091,
        "protocol": "tcp",
        "containerp": 9090
    },
    "model": "storageadmin.dport",
    "pk": 37
},
{
    "fields": {
        "container": 26,
        "description": "Webserver Port. Suggested default: 9000.",
        "uiport": true,
        "hostp_default": 9000,
        "label": "Webserver port",
        "hostp": 9000,
        "protocol": "tcp",
        "containerp": 9000
    },
    "model": "storageadmin.dport",
    "pk": 38
},
{
    "fields": {
        "container": 27,
        "description": "Mylar WebUI port. Suggested default: 8090",
        "uiport": true,
        "hostp_default": 8090,
        "label": "WebUI port",
        "hostp": 8090,
        "protocol": "tcp",
        "containerp": 8090
    },
    "model": "storageadmin.dport",
    "pk": 39
},
{
    "fields": {
        "container": 28,
        "description": "Port for website",
        "uiport": true,
        "hostp_default": 8098,
        "label": "Ghost Port",
        "hostp": 8088,
        "protocol": "tcp",
        "containerp": 2368
    },
    "model": "storageadmin.dport",
    "pk": 40
},
{
    "fields": {
        "container": 29,
        "description": "Web server port. Suggested default: 8181",
        "uiport": true,
        "hostp_default": 8183,
        "label": "Port for the web interface",
        "hostp": 8182,
        "protocol": "tcp",
        "containerp": 8181
    },
    "model": "storageadmin.dport",
    "pk": 41
},
{
    "fields": {
        "container": 30,
        "description": "nzbhydra WebUI port. Suggested default: 5075",
        "uiport": true,
        "hostp_default": 5075,
        "label": "WebUI port",
        "hostp": 5075,
        "protocol": "tcp",
        "containerp": 5075
    },
    "model": "storageadmin.dport",
    "pk": 42
},
{
    "fields": {
        "container": 31,
        "description": "Resilio Sync WebUI port. Suggested default: 8888",
        "uiport": true,
        "hostp_default": 8888,
        "label": "WebUI port",
        "hostp": 8888,
        "protocol": "tcp",
        "containerp": 8888
    },
    "model": "storageadmin.dport",
    "pk": 43
},
{
    "fields": {
        "container": 31,
        "description": "Port for incoming data. You may need to open it(protocol: udp) on your firewall. Suggested default: 55555. Should NOT be changed",
        "uiport": false,
        "hostp_default": 55555,
        "label": "Listening port",
        "hostp": 55555,
        "protocol": null,
        "containerp": 55555
    },
    "model": "storageadmin.dport",
    "pk": 44
},
{
    "fields": {
        "container": 32,
        "description": "BTSync WebUI port. Suggested default: 8888",
        "uiport": true,
        "hostp_default": 8890,
        "label": "WebUI port",
        "hostp": 8889,
        "protocol": "tcp",
        "containerp": 8888
    },
    "model": "storageadmin.dport",
    "pk": 45
},
{
    "fields": {
        "container": 32,
        "description": "Port for incoming data. You may need to open it(protocol: udp) on your firewall. Suggested default: 55555. Should NOT be changed",
        "uiport": false,
        "hostp_default": 55557,
        "label": "Listening port",
        "hostp": 55556,
        "protocol": null,
        "containerp": 55555
    },
    "model": "storageadmin.dport",
    "pk": 46
},
{
    "fields": {
        "container": 33,
        "description": "Transmission WebUI port. Suggested default: 9091",
        "uiport": true,
        "hostp_default": 9094,
        "label": "WebUI port",
        "hostp": 9092,
        "protocol": "tcp",
        "containerp": 9091
    },
    "model": "storageadmin.dport",
    "pk": 47
},
{
    "fields": {
        "container": 33,
        "description": "Port used to share the file being downloaded. You may need to open it (protocol: tcp and udp) on your firewall. Suggested default: 51413.",
        "uiport": false,
        "hostp_default": 51413,
        "label": "Sharing port",
        "hostp": 51413,
        "protocol": null,
        "containerp": 51413
    },
    "model": "storageadmin.dport",
    "pk": 48
},
{
    "fields": {
        "container": 34,
        "description": "",
        "uiport": true,
        "hostp_default": 9980,
        "label": "Http port",
        "hostp": 9980,
        "protocol": "tcp",
        "containerp": 9980
    },
    "model": "storageadmin.dport",
    "pk": 49
},
{
    "fields": {
        "container": 35,
        "description": "Port for Sickrage Web interface. Suggested default: 8081.",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8089,
        "protocol": "tcp",
        "containerp": 8081
    },
    "model": "storageadmin.dport",
    "pk": 50
},
{
    "fields": {
        "container": 36,
        "description": "NZBGet WebUI port. Suggested default: 6789",
        "uiport": true,
        "hostp_default": 6789,
        "label": "WebUI port",
        "hostp": 6789,
        "protocol": "tcp",
        "containerp": 6789
    },
    "model": "storageadmin.dport",
    "pk": 51
},
{
    "fields": {
        "container": 37,
        "description": "Cops Webui port, Suggested default: 80",
        "uiport": true,
        "hostp_default": 84,
        "label": "WebUI port",
        "hostp": 81,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 52
},
{
    "fields": {
        "container": 38,
        "description": "Home Assistant UI port. You may need to open it(protocol: tcp) on your firewall.",
        "uiport": true,
        "hostp_default": 8123,
        "label": "Server port",
        "hostp": 8123,
        "protocol": "tcp",
        "containerp": 8123
    },
    "model": "storageadmin.dport",
    "pk": 53
},
{
    "fields": {
        "container": 39,
        "description": "Set this to port 80 to accept HTTP connections. It will automatically redirect to HTTPS, where the admin UI is hosted (port 443)",
        "uiport": false,
        "hostp_default": 84,
        "label": "HTTP port",
        "hostp": 82,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 54
},
{
    "fields": {
        "container": 40,
        "description": "Port for tftp service",
        "uiport": false,
        "hostp_default": 69,
        "label": "tftp port",
        "hostp": 69,
        "protocol": "udp",
        "containerp": 69
    },
    "model": "storageadmin.dport",
    "pk": 55
},
{
    "fields": {
        "container": 42,
        "description": "Web server port. Suggested default: 5299",
        "uiport": true,
        "hostp_default": 5299,
        "label": "Port for the web interface",
        "hostp": 5299,
        "protocol": "tcp",
        "containerp": 5299
    },
    "model": "storageadmin.dport",
    "pk": 56
},
{
    "fields": {
        "container": 43,
        "description": "MariaDB port. Suggested default: 3306",
        "uiport": false,
        "hostp_default": 3306,
        "label": "MariaDB port",
        "hostp": 3306,
        "protocol": "tcp",
        "containerp": 3306
    },
    "model": "storageadmin.dport",
    "pk": 57
},
{
    "fields": {
        "container": 44,
        "description": "OwnCloud WebUI port. Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8098,
        "label": "WebUI port",
        "hostp": 8091,
        "protocol": null,
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 58
},
{
    "fields": {
        "container": 45,
        "description": "Duplicati WebUI port. Suggested default: 8200",
        "uiport": true,
        "hostp_default": 8200,
        "label": "WebUI port",
        "hostp": 8200,
        "protocol": "tcp",
        "containerp": 8200
    },
    "model": "storageadmin.dport",
    "pk": 59
},
{
    "fields": {
        "container": 46,
        "description": "Gogs WebUI port. Suggested default: 3000",
        "uiport": true,
        "hostp_default": 3002,
        "label": "WebUI port",
        "hostp": 3001,
        "protocol": "tcp",
        "containerp": 3000
    },
    "model": "storageadmin.dport",
    "pk": 60
},
{
    "fields": {
        "container": 46,
        "description": "Gogs ssh port. You may need to open it on your firewall if you want access from outside your local network. Suggested default: 3022.",
        "uiport": false,
        "hostp_default": 3022,
        "label": "ssh port",
        "hostp": 3022,
        "protocol": null,
        "containerp": 22
    },
    "model": "storageadmin.dport",
    "pk": 61
},
{
    "fields": {
        "container": 47,
        "description": "Emby Server WebUI port. Suggested default: 8096",
        "uiport": true,
        "hostp_default": 8096,
        "label": "WebUI port",
        "hostp": 8096,
        "protocol": "tcp",
        "containerp": 8096
    },
    "model": "storageadmin.dport",
    "pk": 62
},
{
    "fields": {
        "container": 48,
        "description": "Port for UAP to inform controller (HTTP redirect for WebUI). Suggested default: 8080",
        "uiport": true,
        "hostp_default": 8098,
        "label": "Redirect to WebUI",
        "hostp": 8092,
        "protocol": "tcp",
        "containerp": 8080
    },
    "model": "storageadmin.dport",
    "pk": 63
},
{
    "fields": {
        "container": 48,
        "description": "Management Port. Suggested default: 8081",
        "uiport": false,
        "hostp_default": 8098,
        "label": "Management Port",
        "hostp": 8093,
        "protocol": "tcp",
        "containerp": 8081
    },
    "model": "storageadmin.dport",
    "pk": 64
},
{
    "fields": {
        "container": 48,
        "description": "STUN Port. Suggested default: 3478",
        "uiport": false,
        "hostp_default": 3478,
        "label": "STUN Port",
        "hostp": 3478,
        "protocol": "udp",
        "containerp": 3478
    },
    "model": "storageadmin.dport",
    "pk": 65
},
{
    "fields": {
        "container": 48,
        "description": "Redirect to Portal. Suggested default: 8880",
        "uiport": false,
        "hostp_default": 8880,
        "label": "Redirect to Portal",
        "hostp": 8880,
        "protocol": "tcp",
        "containerp": 8880
    },
    "model": "storageadmin.dport",
    "pk": 66
},
{
    "fields": {
        "container": 48,
        "description": "Port for WebUI and API. Suggested default: 8443",
        "uiport": false,
        "hostp_default": 8446,
        "label": "HTTPS WebUI",
        "hostp": 8444,
        "protocol": "tcp",
        "containerp": 8443
    },
    "model": "storageadmin.dport",
    "pk": 67
},
{
    "fields": {
        "container": 48,
        "description": "portal redirect port for HTTPs. Suggested default: 8843",
        "uiport": false,
        "hostp_default": 8843,
        "label": "HTTPS Portal",
        "hostp": 8843,
        "protocol": "tcp",
        "containerp": 8843
    },
    "model": "storageadmin.dport",
    "pk": 68
},
{
    "fields": {
        "container": 49,
        "description": "Transmission web UI port (proxied)",
        "uiport": true,
        "hostp_default": 9094,
        "label": "WebUI port",
        "hostp": 9093,
        "protocol": "tcp",
        "containerp": 9091
    },
    "model": "storageadmin.dport",
    "pk": 69
},
{
    "fields": {
        "container": 50,
        "description": "Slave agent port.",
        "uiport": false,
        "hostp_default": 50000,
        "label": "Agent port",
        "hostp": 50000,
        "protocol": "tcp",
        "containerp": 50000
    },
    "model": "storageadmin.dport",
    "pk": 70
},
{
    "fields": {
        "container": 50,
        "description": "Jenkins UI port. You may need to open it(protocol: tcp) on your firewall.",
        "uiport": true,
        "hostp_default": 8098,
        "label": "Server port",
        "hostp": 8094,
        "protocol": "tcp",
        "containerp": 8080
    },
    "model": "storageadmin.dport",
    "pk": 71
},
{
    "fields": {
        "container": 51,
        "description": "Web-port. Recommended: 80. If other port than 80 is used some blocked sites will not show correctly.",
        "uiport": true,
        "hostp_default": 84,
        "label": "Web-Port",
        "hostp": 83,
        "protocol": null,
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 72
},
{
    "fields": {
        "container": 51,
        "description": "DNS port. Required: 53",
        "uiport": false,
        "hostp_default": 53,
        "label": "DNS-Port",
        "hostp": 53,
        "protocol": null,
        "containerp": 53
    },
    "model": "storageadmin.dport",
    "pk": 73
},
{
    "fields": {
        "container": 52,
        "description": "couchpotato WebUI port. Suggested default: 5050",
        "uiport": true,
        "hostp_default": 5050,
        "label": "WebUI port",
        "hostp": 5050,
        "protocol": "tcp",
        "containerp": 5050
    },
    "model": "storageadmin.dport",
    "pk": 74
},
{
    "fields": {
        "container": 53,
        "description": "Teamspeak3 File-Transfer port (tcp). Suggested default: 30033",
        "uiport": false,
        "hostp_default": 30033,
        "label": "File-Transfer port",
        "hostp": 30033,
        "protocol": "tcp",
        "containerp": 30033
    },
    "model": "storageadmin.dport",
    "pk": 75
},
{
    "fields": {
        "container": 53,
        "description": "Teamspeak3 Voice port (udp). Suggested default: 9987",
        "uiport": false,
        "hostp_default": 9987,
        "label": "Voice port",
        "hostp": 9987,
        "protocol": "udp",
        "containerp": 9987
    },
    "model": "storageadmin.dport",
    "pk": 76
},
{
    "fields": {
        "container": 53,
        "description": "Teamspeak3 Listning port (tcp). Suggested default: 10011",
        "uiport": false,
        "hostp_default": 10011,
        "label": "Listning port",
        "hostp": 10011,
        "protocol": "tcp",
        "containerp": 10011
    },
    "model": "storageadmin.dport",
    "pk": 77
},
{
    "fields": {
        "container": 54,
        "description": "Jackett WebUI port. Suggested default: 9117",
        "uiport": true,
        "hostp_default": 9117,
        "label": "WebUI port",
        "hostp": 9117,
        "protocol": "tcp",
        "containerp": 9117
    },
    "model": "storageadmin.dport",
    "pk": 78
},
{
    "fields": {
        "container": 56,
        "description": "OpenVPN server listening port. You may need to open it on your firewall.",
        "uiport": false,
        "hostp_default": 1194,
        "label": "Server port",
        "hostp": 1194,
        "protocol": "udp",
        "containerp": 1194
    },
    "model": "storageadmin.dport",
    "pk": 79
},
{
    "fields": {
        "container": 57,
        "description": "Xeoma server port",
        "uiport": false,
        "hostp_default": 8098,
        "label": "server port",
        "hostp": 8095,
        "protocol": "tcp",
        "containerp": 8090
    },
    "model": "storageadmin.dport",
    "pk": 80
},
{
    "fields": {
        "container": 58,
        "description": "Port for running ZoneMinder. You shouldn't open this externally (it's unsecure). Do not use 80 (it will interfere with RockStor)",
        "uiport": true,
        "hostp_default": 8098,
        "label": "ZoneMinder Port",
        "hostp": 8097,
        "protocol": "tcp",
        "containerp": 80
    },
    "model": "storageadmin.dport",
    "pk": 81
},
{
    "fields": {
        "container": 59,
        "description": "OwnCloud SSL-WebUI port. Suggested default: 8443",
        "uiport": true,
        "hostp_default": 8446,
        "label": "WebUI port",
        "hostp": 8445,
        "protocol": null,
        "containerp": 443
    },
    "model": "storageadmin.dport",
    "pk": 82
},
{
    "fields": {
        "container": 1,
        "description": "Choose a Share for the haproxy configuration. Eg: create a Share called haproxy-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 1
},
{
    "fields": {
        "container": 1,
        "description": "Choose a Share for the letsencrypt files (account files, certificates, keys). Eg: create a share called letsencrypt-data for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Letsencrypt Data Storage",
        "min_size": 1073741824,
        "dest_dir": "/etc/letsencrypt"
    },
    "model": "storageadmin.dvolume",
    "pk": 2
},
{
    "fields": {
        "container": 2,
        "description": "Choose a share to download to.",
        "uservol": false,
        "share": null,
        "label": "Download",
        "min_size": null,
        "dest_dir": "/download"
    },
    "model": "storageadmin.dvolume",
    "pk": 3
},
{
    "fields": {
        "container": 2,
        "description": "Choose a share to host configuration.",
        "uservol": false,
        "share": null,
        "label": "Config",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 4
},
{
    "fields": {
        "container": 2,
        "description": "Choose a share to host shows.",
        "uservol": false,
        "share": null,
        "label": "TV",
        "min_size": null,
        "dest_dir": "/tv"
    },
    "model": "storageadmin.dvolume",
    "pk": 5
},
{
    "fields": {
        "container": 3,
        "description": "Choose a Share for Ombi configuration. Eg: create a Share called Ombi-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 6
},
{
    "fields": {
        "container": 4,
        "description": "Choose a Share for data and configuration. Eg: create a Share called bitcoin-data for this purpose alone",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/bitcoin"
    },
    "model": "storageadmin.dvolume",
    "pk": 7
},
{
    "fields": {
        "container": 5,
        "description": "Select the Share to store podcasts",
        "uservol": false,
        "share": null,
        "label": "Podcast Storage",
        "min_size": 1073741824,
        "dest_dir": "/podcasts"
    },
    "model": "storageadmin.dvolume",
    "pk": 8
},
{
    "fields": {
        "container": 5,
        "description": "Select the Share containing your Media",
        "uservol": false,
        "share": null,
        "label": "Music Storage",
        "min_size": 1073741824,
        "dest_dir": "/music"
    },
    "model": "storageadmin.dvolume",
    "pk": 9
},
{
    "fields": {
        "container": 5,
        "description": "Choose a Share for Subsonic configuration. Eg: create a Share called subsonic-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/subsonic"
    },
    "model": "storageadmin.dvolume",
    "pk": 10
},
{
    "fields": {
        "container": 6,
        "description": "Choose a Share for all of your forum content. Eg: create a Share called discourse-datastore for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Discourse datastore",
        "min_size": 1073741824,
        "dest_dir": "datastore"
    },
    "model": "storageadmin.dvolume",
    "pk": 11
},
{
    "fields": {
        "container": 7,
        "description": "Choose a Share for OwnCloud's postgresql database. Eg: create a Share called owncloud-db for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "DB Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/lib/postgresql/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 12
},
{
    "fields": {
        "container": 8,
        "description": "Choose a Share for OwnCloud data. Eg: create a Share called owncloud-data for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/www/owncloud/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 13
},
{
    "fields": {
        "container": 8,
        "description": "Choose a Share for OwnCloud configuration. Eg: create a Share called owncloud-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/www/owncloud/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 14
},
{
    "fields": {
        "container": 9,
        "description": "Choose a Share for crashplan configuration. Eg: create a Share called crashplan-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/var/crashplan"
    },
    "model": "storageadmin.dvolume",
    "pk": 15
},
{
    "fields": {
        "container": 9,
        "description": "Choose a share to store incoming backup. Eg: create a share called crashplan-storage for this purpose alone. You can also assign other Shares on the system after installation to backup.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/storage"
    },
    "model": "storageadmin.dvolume",
    "pk": 16
},
{
    "fields": {
        "container": 10,
        "description": "Choose a Share for GitLab repositories. Eg: create a Share called gitlab-repos for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Repository Storage",
        "min_size": 1048576,
        "dest_dir": "/var/opt/gitlab"
    },
    "model": "storageadmin.dvolume",
    "pk": 17
},
{
    "fields": {
        "container": 10,
        "description": "Choose a Share for GitLab configuration. Eg: create a Share called gitlab-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/etc/gitlab"
    },
    "model": "storageadmin.dvolume",
    "pk": 18
},
{
    "fields": {
        "container": 10,
        "description": "Choose a Share for GitLab log files. Eg: create a Share called gitlab-logs for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config logs",
        "min_size": 1048576,
        "dest_dir": "/var/log/gitlab"
    },
    "model": "storageadmin.dvolume",
    "pk": 19
},
{
    "fields": {
        "container": 11,
        "description": "local storage for freshrss site files",
        "uservol": false,
        "share": null,
        "label": "Config",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 20
},
{
    "fields": {
        "container": 12,
        "description": "Choose a Share for sabnzbget downloads. Eg: create a Share called sabnzbget-downloads for this purpose alone. You can also assign other media Shares on the system after installation.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 21
},
{
    "fields": {
        "container": 12,
        "description": "Choose a Share for sabnzbget configuration. Eg: create a Share called nzb-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 22
},
{
    "fields": {
        "container": 13,
        "description": "Choose a Share for podcasts. Eg: create a Share called booksonic-podcasts for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Podcasts Storage",
        "min_size": null,
        "dest_dir": "/podcasts"
    },
    "model": "storageadmin.dvolume",
    "pk": 23
},
{
    "fields": {
        "container": 13,
        "description": "Choose a Share for configuration. Eg: create a Share called booksonic-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 24
},
{
    "fields": {
        "container": 13,
        "description": "Choose a Share for books. Eg: create a Share called booksonic-books for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Books Storage",
        "min_size": null,
        "dest_dir": "/books"
    },
    "model": "storageadmin.dvolume",
    "pk": 25
},
{
    "fields": {
        "container": 13,
        "description": "Choose a Share for media. Eg: create a Share called booksonic-media for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Media Storage",
        "min_size": null,
        "dest_dir": "/media"
    },
    "model": "storageadmin.dvolume",
    "pk": 26
},
{
    "fields": {
        "container": 14,
        "description": "Choose a Share for the data and configuration data. (you can add seperate shares for events later by attaching a volume to /config/data/events)",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 27
},
{
    "fields": {
        "container": 14,
        "description": "Choose a Share for the database.",
        "uservol": false,
        "share": null,
        "label": "MySQL Storage",
        "min_size": 1073741824,
        "dest_dir": "/config/mysql"
    },
    "model": "storageadmin.dvolume",
    "pk": 28
},
{
    "fields": {
        "container": 15,
        "description": "Choose a Share for Sonarr downloads. Eg: create a Share called Sonarr-downloads for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 29
},
{
    "fields": {
        "container": 15,
        "description": "Choose a Share for Sonarr configuration. Eg: create a Share called sonarr-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 30
},
{
    "fields": {
        "container": 15,
        "description": "Choose a Share for Sonarr media library Eg: create a Share called Sonarr-library for this purpose alone. You can also assign other media Shares on the system after installation.",
        "uservol": false,
        "share": null,
        "label": "Media Library",
        "min_size": null,
        "dest_dir": "/tv"
    },
    "model": "storageadmin.dvolume",
    "pk": 31
},
{
    "fields": {
        "container": 16,
        "description": "Choose a Share for Deluge downloads. Eg: create a Share called Deluge-downloads for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 32
},
{
    "fields": {
        "container": 16,
        "description": "Choose a Share for Deluge configuration. Eg: create a Share called Deluge-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 33
},
{
    "fields": {
        "container": 17,
        "description": "Holds all the utorrent settings files and databases.",
        "uservol": false,
        "share": null,
        "label": "uTorrent Settings",
        "min_size": null,
        "dest_dir": "/settings"
    },
    "model": "storageadmin.dvolume",
    "pk": 34
},
{
    "fields": {
        "container": 17,
        "description": "Directory for your downloaded media.",
        "uservol": false,
        "share": null,
        "label": "Downloaded Data",
        "min_size": null,
        "dest_dir": "/media"
    },
    "model": "storageadmin.dvolume",
    "pk": 35
},
{
    "fields": {
        "container": 18,
        "description": "Choose a Share for Radarr Downloads",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 36
},
{
    "fields": {
        "container": 18,
        "description": "Choose a Share for Radarr Configuration Files",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 37
},
{
    "fields": {
        "container": 18,
        "description": "Choose a Share for Radarr Media Library",
        "uservol": false,
        "share": null,
        "label": "Movies location",
        "min_size": null,
        "dest_dir": "/movies"
    },
    "model": "storageadmin.dvolume",
    "pk": 38
},
{
    "fields": {
        "container": 19,
        "description": "Choose a Share for Plexpy configuration. Eg: create a Share called plexpy-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 39
},
{
    "fields": {
        "container": 19,
        "description": "Choose a Share that holds your Plex configuration. This will allow Plexpy to read the Plex log files.",
        "uservol": false,
        "share": null,
        "label": "Plex Config",
        "min_size": null,
        "dest_dir": "/plex-config"
    },
    "model": "storageadmin.dvolume",
    "pk": 40
},
{
    "fields": {
        "container": 20,
        "description": "Choose a Share for Plex configuration. Eg: create a Share called plex-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 41
},
{
    "fields": {
        "container": 20,
        "description": "Choose a Share for Plex content(your media). Eg: create a Share called plex-data for this purpose alone. You can also assign other media Shares on the system after installation.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 42
},
{
    "fields": {
        "container": 21,
        "description": "Choose a Share for scaninput documents. Eg: create a Share called ecodms-scaninput for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Scaninput folder",
        "min_size": null,
        "dest_dir": "/srv/scaninput"
    },
    "model": "storageadmin.dvolume",
    "pk": 43
},
{
    "fields": {
        "container": 21,
        "description": "Choose a Share as backup location. Backups from ecoDMS are stored here.",
        "uservol": false,
        "share": null,
        "label": "Backup storage",
        "min_size": null,
        "dest_dir": "/srv/backup"
    },
    "model": "storageadmin.dvolume",
    "pk": 44
},
{
    "fields": {
        "container": 21,
        "description": "Choose a Share for data. Eg: create a Share called ecodms-data for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/srv/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 45
},
{
    "fields": {
        "container": 21,
        "description": "Choose a Share for restoring backups. A backup can put in here and can the be restored.",
        "uservol": false,
        "share": null,
        "label": "Restore folder",
        "min_size": null,
        "dest_dir": "/srv/restore"
    },
    "model": "storageadmin.dvolume",
    "pk": 46
},
{
    "fields": {
        "container": 22,
        "description": "Choose a Share for muximux configuration. Eg: create a Share called muximux-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 47
},
{
    "fields": {
        "container": 24,
        "description": "Choose a Share for Rocket.Chat Mongo database. E.g. create a Share called rocketchat-DB for this purpose.",
        "uservol": false,
        "share": null,
        "label": "mongo DB storage",
        "min_size": 1073741824,
        "dest_dir": "/data/db"
    },
    "model": "storageadmin.dvolume",
    "pk": 48
},
{
    "fields": {
        "container": 25,
        "description": "Choose a Share for configuration. Eg: create a Share called syncthing-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 49
},
{
    "fields": {
        "container": 25,
        "description": "Choose a Share for all incoming data. Eg: create a Share called syncthing-data for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/home/syncthing/Sync"
    },
    "model": "storageadmin.dvolume",
    "pk": 50
},
{
    "fields": {
        "container": 26,
        "description": "Select the Share containing your Media",
        "uservol": false,
        "share": null,
        "label": "Media Storage",
        "min_size": 1073741824,
        "dest_dir": "/media"
    },
    "model": "storageadmin.dvolume",
    "pk": 51
},
{
    "fields": {
        "container": 27,
        "description": "Choose a Share for Mylar Downloads",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 52
},
{
    "fields": {
        "container": 27,
        "description": "Choose a Share for Mylar Configuration Files",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 53
},
{
    "fields": {
        "container": 27,
        "description": "Choose a Share for Mylar Media Library",
        "uservol": false,
        "share": null,
        "label": "Comic library location",
        "min_size": null,
        "dest_dir": "/comics"
    },
    "model": "storageadmin.dvolume",
    "pk": 54
},
{
    "fields": {
        "container": 28,
        "description": "Choose a share for your blog data.",
        "uservol": false,
        "share": null,
        "label": "Blog Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/lib/ghost"
    },
    "model": "storageadmin.dvolume",
    "pk": 55
},
{
    "fields": {
        "container": 29,
        "description": "Choose a share where the music will be downloaded to. ",
        "uservol": false,
        "share": null,
        "label": "Download storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 56
},
{
    "fields": {
        "container": 29,
        "description": "Choose a share where the config file should be stored. Eg: create a share called headphones-conf for this purpose alone. ",
        "uservol": false,
        "share": null,
        "label": "Config storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 57
},
{
    "fields": {
        "container": 29,
        "description": "Choose a share where the music library is located. ",
        "uservol": false,
        "share": null,
        "label": "Music library",
        "min_size": null,
        "dest_dir": "/music"
    },
    "model": "storageadmin.dvolume",
    "pk": 58
},
{
    "fields": {
        "container": 30,
        "description": "Choose a Share for nzbhydra downloads. Eg: create a Share called nzbhydra-downloads for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 59
},
{
    "fields": {
        "container": 30,
        "description": "Choose a Share for nzbhydra configuration. Eg: create a Share called nzbhydra-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 60
},
{
    "fields": {
        "container": 31,
        "description": "Choose a Share for all incoming data including app state and config. Eg: create a Share called resiliosync-data for this purpose alone. It will be available as /mnt/sync inside Resilio Sync.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/mnt/sync"
    },
    "model": "storageadmin.dvolume",
    "pk": 61
},
{
    "fields": {
        "container": 32,
        "description": "Choose a Share for all incoming data including app state and config. Eg: create a Share called btsync-data for this purpose alone. It will be available as /mnt/sync inside BTSync.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/mnt/sync"
    },
    "model": "storageadmin.dvolume",
    "pk": 62
},
{
    "fields": {
        "container": 33,
        "description": "Choose a Share where Transmission will save all of it's config and data files including your downloads. Eg: create a Share called transmission-data.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/var/lib/transmission-daemon"
    },
    "model": "storageadmin.dvolume",
    "pk": 63
},
{
    "fields": {
        "container": 35,
        "description": "Choose a share to download to.",
        "uservol": false,
        "share": null,
        "label": "Download",
        "min_size": null,
        "dest_dir": "/download"
    },
    "model": "storageadmin.dvolume",
    "pk": 64
},
{
    "fields": {
        "container": 35,
        "description": "Choose a share to host configuration.",
        "uservol": false,
        "share": null,
        "label": "Config",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 65
},
{
    "fields": {
        "container": 35,
        "description": "Choose a share to host shows.",
        "uservol": false,
        "share": null,
        "label": "TV",
        "min_size": null,
        "dest_dir": "/tv"
    },
    "model": "storageadmin.dvolume",
    "pk": 66
},
{
    "fields": {
        "container": 36,
        "description": "Choose a Share for NZBGet downloads. Eg: create a Share called nzbget-downloads for this purpose alone. You can also assign other media Shares on the system after installation.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 67
},
{
    "fields": {
        "container": 36,
        "description": "Choose a Share for NZBGet configuration. Eg: create a Share called nzb-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 68
},
{
    "fields": {
        "container": 37,
        "description": "Choose a Share for cops configuration. Eg: create a Share called cops-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 69
},
{
    "fields": {
        "container": 37,
        "description": "Choose a Share for cops book library. Eg: create a Share called cops-library for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Books location",
        "min_size": null,
        "dest_dir": "/movies"
    },
    "model": "storageadmin.dvolume",
    "pk": 70
},
{
    "fields": {
        "container": 38,
        "description": "Choose a Share for Home Assintant configuration.",
        "uservol": false,
        "share": null,
        "label": "Home Assistant Config",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 71
},
{
    "fields": {
        "container": 40,
        "description": "Choose a Share for tfp root (should contain pxelinux.cfg)",
        "uservol": false,
        "share": null,
        "label": "tfp root",
        "min_size": null,
        "dest_dir": "/var/tftpboot"
    },
    "model": "storageadmin.dvolume",
    "pk": 72
},
{
    "fields": {
        "container": 41,
        "description": "Directory for your dropbox configuration.",
        "uservol": false,
        "share": null,
        "label": "dropbox config folder",
        "min_size": null,
        "dest_dir": "/dbox/.dropbox"
    },
    "model": "storageadmin.dvolume",
    "pk": 73
},
{
    "fields": {
        "container": 41,
        "description": "Directory for your dropbox folder.",
        "uservol": false,
        "share": null,
        "label": "Dropbox folder",
        "min_size": null,
        "dest_dir": "/dbox/Dropbox"
    },
    "model": "storageadmin.dvolume",
    "pk": 74
},
{
    "fields": {
        "container": 42,
        "description": "Choose a share where the books will be downloaded to. ",
        "uservol": false,
        "share": null,
        "label": "Download storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 75
},
{
    "fields": {
        "container": 42,
        "description": "Choose a share where the config file should be stored. Eg: create a share called lazylibrarian-config for this purpose alone. ",
        "uservol": false,
        "share": null,
        "label": "Config storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 76
},
{
    "fields": {
        "container": 42,
        "description": "Choose a share where the book library is located. ",
        "uservol": false,
        "share": null,
        "label": "Book library",
        "min_size": null,
        "dest_dir": "/books"
    },
    "model": "storageadmin.dvolume",
    "pk": 77
},
{
    "fields": {
        "container": 43,
        "description": "Choose a share where the database should be stored. Eg: create a share called mariadb-server1 for this purpose alone. ",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 78
},
{
    "fields": {
        "container": 44,
        "description": "Choose a Share for OwnCloud. Eg: create a Share called owncloud-all for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/www/html"
    },
    "model": "storageadmin.dvolume",
    "pk": 79
},
{
    "fields": {
        "container": 45,
        "description": "Choose a Share for Duplicati configuration. Eg: create a Share called duplicati-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/root/.config/Duplicati/"
    },
    "model": "storageadmin.dvolume",
    "pk": 80
},
{
    "fields": {
        "container": 46,
        "description": "Choose a Share for gogs configuration and database.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 81
},
{
    "fields": {
        "container": 46,
        "description": "Choose a Share for your git repositories.",
        "uservol": false,
        "share": null,
        "label": "Git Storage",
        "min_size": null,
        "dest_dir": "/data/git/gogs-repositories"
    },
    "model": "storageadmin.dvolume",
    "pk": 82
},
{
    "fields": {
        "container": 47,
        "description": "Choose a Share for the Emby Server configuration. Eg: create a Share called emby-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 83
},
{
    "fields": {
        "container": 47,
        "description": "Choose a Share with media content. Eg: create a Share called emby-media for this purpose alone or use an existing share. It will be available as /media inside Emby.",
        "uservol": false,
        "share": null,
        "label": "Media Storage",
        "min_size": null,
        "dest_dir": "/media"
    },
    "model": "storageadmin.dvolume",
    "pk": 84
},
{
    "fields": {
        "container": 48,
        "description": "Choose a Share for Unifi Controller configuration. Eg: create a Share called unifi-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/var/lib/unifi"
    },
    "model": "storageadmin.dvolume",
    "pk": 85
},
{
    "fields": {
        "container": 49,
        "description": "Choose a Share where Transmission will save all of it's config and data files including your downloads. Eg: create a Share called transmission-data.",
        "uservol": false,
        "share": null,
        "label": "Data Storage",
        "min_size": null,
        "dest_dir": "/data"
    },
    "model": "storageadmin.dvolume",
    "pk": 86
},
{
    "fields": {
        "container": 49,
        "description": "Choose a Share where a set of custom OpenVPN profile files can be found. This can be an empty share if you use one of the included provider profiles.",
        "uservol": false,
        "share": null,
        "label": "OpenVPN config",
        "min_size": null,
        "dest_dir": "/etc/openvpn/custom"
    },
    "model": "storageadmin.dvolume",
    "pk": 87
},
{
    "fields": {
        "container": 50,
        "description": "Choose a Share for Jenkins home. Jenkins will run as the same user that owns this Share. It is recommended to set the owner to a non-root user",
        "uservol": false,
        "share": null,
        "label": "Jenkins Home",
        "min_size": null,
        "dest_dir": "/var/jenkins_home"
    },
    "model": "storageadmin.dvolume",
    "pk": 88
},
{
    "fields": {
        "container": 51,
        "description": "Choose a Share for Pi-Hole configuration. Eg: create a Share called pihole-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/etc/pihole"
    },
    "model": "storageadmin.dvolume",
    "pk": 89
},
{
    "fields": {
        "container": 52,
        "description": "Choose a Share for couchpotato downloads. Eg: create a Share called couchpotato-downloads for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 90
},
{
    "fields": {
        "container": 52,
        "description": "Choose a Share for couchpotato configuration. Eg: create a Share called couchpotato-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 91
},
{
    "fields": {
        "container": 52,
        "description": "Choose a Share for couchpotato media library Eg: create a Share called couchpotato-library for this purpose alone. You can also assign other media Shares on the system after installation.",
        "uservol": false,
        "share": null,
        "label": "Movies location",
        "min_size": null,
        "dest_dir": "/movies"
    },
    "model": "storageadmin.dvolume",
    "pk": 92
},
{
    "fields": {
        "container": 53,
        "description": "Choose a Share for Teamspeak3 configuration. Eg: create a Share called Teamspeak3-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 93
},
{
    "fields": {
        "container": 54,
        "description": "Choose a Share for jackett downloads. Eg: create a Share called jackett-downloads for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Download Storage",
        "min_size": null,
        "dest_dir": "/downloads"
    },
    "model": "storageadmin.dvolume",
    "pk": 94
},
{
    "fields": {
        "container": 54,
        "description": "Choose a Share for jackett configuration. Eg: create a Share called jackett-config for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Config Storage",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 95
},
{
    "fields": {
        "container": 57,
        "description": "Xeoma config path",
        "uservol": false,
        "share": null,
        "label": "xeoma config",
        "min_size": null,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 96
},
{
    "fields": {
        "container": 57,
        "description": "Xeoma archive path",
        "uservol": false,
        "share": null,
        "label": "xeoma archive",
        "min_size": null,
        "dest_dir": "/archive"
    },
    "model": "storageadmin.dvolume",
    "pk": 97
},
{
    "fields": {
        "container": 58,
        "description": "Choose a Share for the data and configuration data. (you can add seperate shares for events later by attaching a volume to /config/data/events)",
        "uservol": false,
        "share": null,
        "label": "Date and Config Storage",
        "min_size": 1073741824,
        "dest_dir": "/config"
    },
    "model": "storageadmin.dvolume",
    "pk": 98
},
{
    "fields": {
        "container": 58,
        "description": "Choose a Share for the database.",
        "uservol": false,
        "share": null,
        "label": "MySQL Storage",
        "min_size": 1073741824,
        "dest_dir": "/config/mysql"
    },
    "model": "storageadmin.dvolume",
    "pk": 99
},
{
    "fields": {
        "container": 59,
        "description": "Choose a Share for OwnCloud. Eg: create a Share called owncloud-all for this purpose alone.",
        "uservol": false,
        "share": null,
        "label": "Storage",
        "min_size": 1073741824,
        "dest_dir": "/var/www/html"
    },
    "model": "storageadmin.dvolume",
    "pk": 100
},
{
    "fields": {
        "container": 14,
        "name": "--privileged=true",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 1
},
{
    "fields": {
        "container": 15,
        "name": "-v",
        "val": "/dev/rtc:/dev/rtc:ro"
    },
    "model": "storageadmin.containeroption",
    "pk": 2
},
{
    "fields": {
        "container": 20,
        "name": "--net=host",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 3
},
{
    "fields": {
        "container": 23,
        "name": "-e",
        "val": "MONGO_URL=mongodb://mongodb.rocketchat:27017/rocketchat"
    },
    "model": "storageadmin.containeroption",
    "pk": 4
},
{
    "fields": {
        "container": 23,
        "name": "--link",
        "val": "mongodb.rocketchat"
    },
    "model": "storageadmin.containeroption",
    "pk": 5
},
{
    "fields": {
        "container": 36,
        "name": "--net=host",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 6
},
{
    "fields": {
        "container": 38,
        "name": "--net",
        "val": "host"
    },
    "model": "storageadmin.containeroption",
    "pk": 7
},
{
    "fields": {
        "container": 41,
        "name": "--net",
        "val": "host"
    },
    "model": "storageadmin.containeroption",
    "pk": 8
},
{
    "fields": {
        "container": 45,
        "name": "-e",
        "val": "MONO_EXTERNAL_ENCODINGS=UTF-8"
    },
    "model": "storageadmin.containeroption",
    "pk": 9
},
{
    "fields": {
        "container": 47,
        "name": "--net=host",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 10
},
{
    "fields": {
        "container": 49,
        "name": "-v",
        "val": "/etc/localtime:/etc/localtime:ro"
    },
    "model": "storageadmin.containeroption",
    "pk": 11
},
{
    "fields": {
        "container": 49,
        "name": "--cap-add",
        "val": "NET_ADMIN"
    },
    "model": "storageadmin.containeroption",
    "pk": 12
},
{
    "fields": {
        "container": 49,
        "name": "--device",
        "val": "/dev/net/tun"
    },
    "model": "storageadmin.containeroption",
    "pk": 13
},
{
    "fields": {
        "container": 51,
        "name": "--cap-add",
        "val": "NET_ADMIN"
    },
    "model": "storageadmin.containeroption",
    "pk": 14
},
{
    "fields": {
        "container": 51,
        "name": "--restart",
        "val": "always"
    },
    "model": "storageadmin.containeroption",
    "pk": 15
},
{
    "fields": {
        "container": 55,
        "name": "-v",
        "val": "/etc/openvpn"
    },
    "model": "storageadmin.containeroption",
    "pk": 16
},
{
    "fields": {
        "container": 56,
        "name": "--cap-add=NET_ADMIN",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 17
},
{
    "fields": {
        "container": 56,
        "name": "--volumes-from",
        "val": "ovpn-data"
    },
    "model": "storageadmin.containeroption",
    "pk": 18
},
{
    "fields": {
        "container": 58,
        "name": "--privileged=true",
        "val": ""
    },
    "model": "storageadmin.containeroption",
    "pk": 19
},
{
    "fields": {
        "rockon": 6,
        "label": "Admin e-mail",
        "val": null,
        "key": "admin-email",
        "description": "E-mail address of the forum administrator. Eg: suman@rockstor.com"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 1
},
{
    "fields": {
        "rockon": 6,
        "label": "Forum web address",
        "val": null,
        "key": "hostname",
        "description": "FQDN of your forum. Users will access the forum with this web address. Eg: forum.rockstor.com"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 2
},
{
    "fields": {
        "rockon": 6,
        "label": "SMTP server",
        "val": null,
        "key": "smtp-address",
        "description": "SMTP server address to use to send e-mails to forum members. Eg: smtp.gmail.com"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 3
},
{
    "fields": {
        "rockon": 6,
        "label": "SMTP port",
        "val": null,
        "key": "smtp-port",
        "description": "SMTP server port. In many cases, 587 is used."
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 4
},
{
    "fields": {
        "rockon": 6,
        "label": "SMTP username",
        "val": null,
        "key": "smtp-username",
        "description": "SMTP username/email-address. Eg: myforum@gmail.com"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 5
},
{
    "fields": {
        "rockon": 6,
        "label": "SMTP password",
        "val": null,
        "key": "smtp-password",
        "description": "Password for the above e-mail address"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 6
},
{
    "fields": {
        "rockon": 7,
        "label": "DB User",
        "val": null,
        "key": "db_user",
        "description": "Choose a administrator username for the OwnCloud database."
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 7
},
{
    "fields": {
        "rockon": 7,
        "label": "DB Password",
        "val": null,
        "key": "db_pw",
        "description": "Choose a secure password for the database admin user"
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 8
},
{
    "fields": {
        "rockon": 53,
        "label": "Server address",
        "val": null,
        "key": "servername",
        "description": "Your Rockstor system's public ip address or FQDN."
    },
    "model": "storageadmin.dcustomconfig",
    "pk": 9
},
{
    "fields": {
        "label": "Comma separated list of hostnames",
        "container": 1,
        "val": null,
        "key": "CERTS",
        "description": "Comma separated list of hostnames for which the letsencrypt certificate will get generated. All of them must resolve to the external ip of this rockstor box."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 1
},
{
    "fields": {
        "label": "Email Adress",
        "container": 1,
        "val": null,
        "key": "EMAIL",
        "description": "Email Adress used for account registration"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 2
},
{
    "fields": {
        "label": "UID",
        "container": 2,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run sickbeard as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 3
},
{
    "fields": {
        "label": "GID",
        "container": 2,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 4
},
{
    "fields": {
        "label": "UID to run Ombi as.",
        "container": 3,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Ombi as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 5
},
{
    "fields": {
        "label": "GID to run Ombi as.",
        "container": 3,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 6
},
{
    "fields": {
        "label": "MAX_MEM",
        "container": 5,
        "val": null,
        "key": "MAX_MEM",
        "description": "This environment variable is used to set the maximum Java heap size in megabytes - 150 is a good default"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 7
},
{
    "fields": {
        "label": "UID",
        "container": 11,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 8
},
{
    "fields": {
        "label": "GID",
        "container": 11,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It (or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 9
},
{
    "fields": {
        "label": "UID to run sabnzbget as.",
        "container": 12,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run sabnzbget as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 10
},
{
    "fields": {
        "label": "GID to run sabnzbget as.",
        "container": 12,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 11
},
{
    "fields": {
        "label": "UID",
        "container": 13,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run booksonic with. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 12
},
{
    "fields": {
        "label": "GID",
        "container": 13,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 13
},
{
    "fields": {
        "label": "UID to run Sonarr as.",
        "container": 15,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Sonarr as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 14
},
{
    "fields": {
        "label": "GID to run Sonarr as.",
        "container": 15,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 15
},
{
    "fields": {
        "label": "UID to run Deluge as.",
        "container": 16,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Deluge as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 16
},
{
    "fields": {
        "label": "GID to run Deluge as.",
        "container": 16,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 17
},
{
    "fields": {
        "label": "UID to run uTorrent as.",
        "container": 17,
        "val": null,
        "key": "UTORRENT_UID",
        "description": "Enter a valid UID to run utorrent as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 18
},
{
    "fields": {
        "label": "GID to run uTorrent as.",
        "container": 17,
        "val": null,
        "key": "UTORRENT_GID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 19
},
{
    "fields": {
        "label": "UID to run Radarr as.",
        "container": 18,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Radarr as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 20
},
{
    "fields": {
        "label": "GID to run Radarr as.",
        "container": 18,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 21
},
{
    "fields": {
        "label": "GIT_BRANCH",
        "container": 19,
        "val": null,
        "key": "ADVANCED_GIT_BRANCH",
        "description": "Choose branch of Plexpy. unless you know which version to try, just type master"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 22
},
{
    "fields": {
        "label": "UID",
        "container": 19,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Plexpy with. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 23
},
{
    "fields": {
        "label": "GID",
        "container": 19,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 24
},
{
    "fields": {
        "label": "VERSION",
        "container": 20,
        "val": null,
        "key": "VERSION",
        "description": "Choose version of plex. unless you know which version to try, just type latest"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 25
},
{
    "fields": {
        "label": "UID",
        "container": 20,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Plex with. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 26
},
{
    "fields": {
        "label": "GID",
        "container": 20,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 27
},
{
    "fields": {
        "label": "UID to run muximux as.",
        "container": 22,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run muximux as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 28
},
{
    "fields": {
        "label": "GID to run muximux as.",
        "container": 22,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 29
},
{
    "fields": {
        "label": "UID",
        "container": 25,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Syncthing with. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 30
},
{
    "fields": {
        "label": "GID",
        "container": 25,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the same UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 31
},
{
    "fields": {
        "label": "UID to run Mylar as.",
        "container": 27,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Mylar as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 32
},
{
    "fields": {
        "label": "GID to run Mylar as.",
        "container": 27,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 33
},
{
    "fields": {
        "label": "UID to run Headphones as",
        "container": 29,
        "val": null,
        "key": "PUID",
        "description": "UID"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 34
},
{
    "fields": {
        "label": "GID to run Muximux as",
        "container": 29,
        "val": null,
        "key": "PGID",
        "description": "GID"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 35
},
{
    "fields": {
        "label": "UID to run nzbhydra as.",
        "container": 30,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run nzbhydra as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 36
},
{
    "fields": {
        "label": "GID to run nzbhydra as.",
        "container": 30,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 37
},
{
    "fields": {
        "label": "WebUI username",
        "container": 33,
        "val": null,
        "key": "TRUSER",
        "description": "Choose a login username for Transmission WebUI."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 38
},
{
    "fields": {
        "label": "WebUI password",
        "container": 33,
        "val": null,
        "key": "TRPASSWD",
        "description": "Choose a login password for the Transmission WebUI."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 39
},
{
    "fields": {
        "label": "UID",
        "container": 33,
        "val": null,
        "key": "USERID",
        "description": "Choose a UID to run transmission as."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 40
},
{
    "fields": {
        "label": "GID",
        "container": 33,
        "val": null,
        "key": "GROUPID",
        "description": "Choose a GID to run transmission as."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 41
},
{
    "fields": {
        "label": "Own-/Nextcloud hostname(s)",
        "container": 34,
        "val": null,
        "key": "domain",
        "description": "Hostname(s) that your own Nextcloud/Owncloud runs on. Also make sure to escape all dots with double backslashes (\\), since this string will be evaluated as a regular expression (and your bash 'eats' the first backslash.) If you want to use the docker container with more than one Nextcloud, you'll need to use 'domain=cloud\\\\.nextcloud\\\\.com\\|second\\\\.nexcloud\\\\.com' instead. (All hosts seperated by \\|.)"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 42
},
{
    "fields": {
        "label": "UID",
        "container": 35,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run sickrage as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 43
},
{
    "fields": {
        "label": "GID",
        "container": 35,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 44
},
{
    "fields": {
        "label": "UID to run NZBGet as.",
        "container": 36,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run NZBGet as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 45
},
{
    "fields": {
        "label": "GID to run NZBGet as.",
        "container": 36,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 46
},
{
    "fields": {
        "label": "UID to run cops as.",
        "container": 37,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run cops as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 47
},
{
    "fields": {
        "label": "GID to run cops as.",
        "container": 37,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 48
},
{
    "fields": {
        "label": "UID to run dropbox as.",
        "container": 41,
        "val": null,
        "key": "DBOX_UID",
        "description": "Enter a valid UID to run dropbox as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 49
},
{
    "fields": {
        "label": "GID to run dropbox as.",
        "container": 41,
        "val": null,
        "key": "DBOX_GID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 50
},
{
    "fields": {
        "label": "Skip updating dropbox?",
        "container": 41,
        "val": null,
        "key": "$DBOX_SKIP_UPDATE",
        "description": "Set this to true to skip updating to the latest Dropbox version on contrainer start. Default should be False. Accepts only True or False (case sensitive)."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 51
},
{
    "fields": {
        "label": "UID to run lazylibrarian as",
        "container": 42,
        "val": null,
        "key": "PUID",
        "description": "UID"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 52
},
{
    "fields": {
        "label": "GID to run lazylibrarian as",
        "container": 42,
        "val": null,
        "key": "PGID",
        "description": "GID"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 53
},
{
    "fields": {
        "label": "UID to run MariaDB as.",
        "container": 43,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run MariaDB as. It must have full permissions to the share mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 54
},
{
    "fields": {
        "label": "GID to run MariaDB as.",
        "container": 43,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It (or the above UID) must have full permissions to the share mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 55
},
{
    "fields": {
        "label": "Root password.",
        "container": 43,
        "val": null,
        "key": "MYSQL_ROOT_PASSWORD",
        "description": "Enter a root password for the MariaDB server (minimum 4 characters)."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 56
},
{
    "fields": {
        "label": "Password for Duplicati",
        "container": 45,
        "val": null,
        "key": "DUPLICATI_PASS",
        "description": "Enter a password for the Duplicati web UI."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 57
},
{
    "fields": {
        "label": "UID to run Emby Server as.",
        "container": 47,
        "val": null,
        "key": "APP_UID",
        "description": "Enter a valid UID of an existing user with permission to media shares to run Emby as."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 58
},
{
    "fields": {
        "label": "GID to run Emby Server as.",
        "container": 47,
        "val": null,
        "key": "APP_GID",
        "description": "Enter a valid GID of an exisiting user with permission to media shares to run Emby as."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 59
},
{
    "fields": {
        "label": "OPENVPN_PROVIDER",
        "container": 49,
        "val": null,
        "key": "OPENVPN_PROVIDER",
        "description": "OpenVPN Provider, in uppercase, e.g. PIA or CUSTOM"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 60
},
{
    "fields": {
        "label": "OPENVPN_CONFIG",
        "container": 49,
        "val": null,
        "key": "OPENVPN_CONFIG",
        "description": "Provider config name; 'default' is a safe bet"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 61
},
{
    "fields": {
        "label": "OPENVPN_USERNAME",
        "container": 49,
        "val": null,
        "key": "OPENVPN_USERNAME",
        "description": "Your VPN username"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 62
},
{
    "fields": {
        "label": "OPENVPN_PASSWORD",
        "container": 49,
        "val": null,
        "key": "OPENVPN_PASSWORD",
        "description": "Your VPN password"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 63
},
{
    "fields": {
        "label": "OPENVPN_OPTS",
        "container": 49,
        "val": null,
        "key": "OPENVPN_OPTS",
        "description": "OpenVPN options, recommended: '--inactive 3600 --ping 10 --ping-exit 60'"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 64
},
{
    "fields": {
        "label": "LOCAL_NETWORK",
        "container": 49,
        "val": null,
        "key": "LOCAL_NETWORK",
        "description": "IP range (in CIDR notation, e.g. 192.168.0.0/24) to consider 'local'; this range is added to the routing, so that the web UI can be used."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 65
},
{
    "fields": {
        "label": "User ID",
        "container": 49,
        "val": null,
        "key": "PUID",
        "description": "Choose a User ID to run Transmission as"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 66
},
{
    "fields": {
        "label": "Group ID",
        "container": 49,
        "val": null,
        "key": "PGID",
        "description": "Choose a Group ID to run Transmission as"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 67
},
{
    "fields": {
        "label": "Rockstor IP",
        "container": 51,
        "val": null,
        "key": "ServerIP",
        "description": "Enter IP-adress of rockstor server. If not specified it will default to internal docker IP and it will not work."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 68
},
{
    "fields": {
        "label": "Virtual Host",
        "container": 51,
        "val": null,
        "key": "VIRTUAL_HOST",
        "description": "Enter IP of rockstor server."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 69
},
{
    "fields": {
        "label": "Primary DNS Server",
        "container": 51,
        "val": null,
        "key": "DNS1",
        "description": "Enter Primary DNS server. Eg: 8.8.8.8"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 70
},
{
    "fields": {
        "label": "Secondary DNS Server",
        "container": 51,
        "val": null,
        "key": "DNS2",
        "description": "Enter Secondary DNS server. Eg: 8.8.4.4"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 71
},
{
    "fields": {
        "label": "Enable IPv6",
        "container": 51,
        "val": null,
        "key": "IPv6",
        "description": "Enable or Disable Pi-Hole IPv6 support. Enter: true or false"
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 72
},
{
    "fields": {
        "label": "Web-Password",
        "container": 51,
        "val": null,
        "key": "WEBPASSWORD",
        "description": "Enter desired webpassword for pi-hole."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 73
},
{
    "fields": {
        "label": "UID to run couchpotato as.",
        "container": 52,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run couchpotato as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 74
},
{
    "fields": {
        "label": "GID to run couchpotato as.",
        "container": 52,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 75
},
{
    "fields": {
        "label": "UID to run Teamspeak3 as.",
        "container": 53,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run Teamspeak3 as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 76
},
{
    "fields": {
        "label": "GID to run Teamspeak3 as.",
        "container": 53,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 77
},
{
    "fields": {
        "label": "UID to run jackett as.",
        "container": 54,
        "val": null,
        "key": "PUID",
        "description": "Enter a valid UID to run jackett as. It must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 78
},
{
    "fields": {
        "label": "GID to run jackett as.",
        "container": 54,
        "val": null,
        "key": "PGID",
        "description": "Enter a valid GID to use along with the above UID. It(or the above UID) must have full permissions to all Shares mapped in the previous step."
    },
    "model": "storageadmin.dcontainerenv",
    "pk": 79
},
{
    "fields": {
        "size": 611,
        "md5sum": "d0a8d262ae60584f07bf713031332802",
        "config_backup": "",
        "filename": "backup-2018-03-18-123822.json.gz"
    },
    "model": "storageadmin.configbackup",
    "pk": 3
},
{
    "fields": {
        "size": 2505,
        "md5sum": "7c4df9e67760b88229bccbad252bea5f",
        "config_backup": "config-backups/data",
        "filename": "data"
    },
    "model": "storageadmin.configbackup",
    "pk": 4
},
{
    "fields": {
        "redirect_uris": "",
        "name": "cliapp",
        "client_type": "confidential",
        "user": [
            "admin"
        ],
        "client_id": "ITPPST7NWT1PvS9vtrDW8p9IjgjM1EUdDog0Y9gy",
        "skip_authorization": false,
        "client_secret": "zoaISVx3ebzEwxzcCd1B0lBNV10JPTqBQStrqrYVXf1nqB2RtEUzjGlZhUiFPw1SaG30edhbgkpNQXTAZRKwepHmpcZdH7ly4VHedaFL3YtpZy6XUmPgH5UmL8Cq0iqn",
        "authorization_grant_type": "client-credentials"
    },
    "model": "oauth2_provider.application",
    "pk": 1
},
{
    "fields": {
        "application": 1,
        "token": "WUOCYb5ujOeluzCxhw3pg03RlEAWCp",
        "expires": "2018-03-12T01:54:06.834Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 1
},
{
    "fields": {
        "application": 1,
        "token": "kHAb51f351kDarql9Tur5EoRDid1wd",
        "expires": "2018-03-12T01:54:06.842Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 2
},
{
    "fields": {
        "application": 1,
        "token": "KUCYCZSvpZx3yGQn5laMr4L5S9gTHP",
        "expires": "2018-03-12T01:54:06.850Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 3
},
{
    "fields": {
        "application": 1,
        "token": "w2ql8SFiRXuOMrx6pdJgrWpBK3EAtf",
        "expires": "2018-03-12T01:55:49.828Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 4
},
{
    "fields": {
        "application": 1,
        "token": "bZUj2UT70hMF6pFIJpXWY2LHUoziVG",
        "expires": "2018-03-12T01:55:49.829Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 5
},
{
    "fields": {
        "application": 1,
        "token": "AQ0r4vKbWXC3iyQ2RKiQ60939un06E",
        "expires": "2018-03-12T01:55:49.843Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 6
},
{
    "fields": {
        "application": 1,
        "token": "MlRLR8KCseLEjkfCD5grsPgn4ISzwg",
        "expires": "2018-03-12T01:56:08.515Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 7
},
{
    "fields": {
        "application": 1,
        "token": "mrjmEa3c6tgp6n5R4RvgVii1iM1jM6",
        "expires": "2018-03-12T01:56:08.531Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 8
},
{
    "fields": {
        "application": 1,
        "token": "f29wxz9MZoPMTiLliQrd6yN1zKixGO",
        "expires": "2018-03-12T01:56:08.543Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 9
},
{
    "fields": {
        "application": 1,
        "token": "CY2Bravo2ee0jGZdTxrVFovt7a5hiI",
        "expires": "2018-03-12T01:57:53.175Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 10
},
{
    "fields": {
        "application": 1,
        "token": "nbn5eErSy7znsHysjrHXc5hbZnmMsw",
        "expires": "2018-03-12T01:57:53.190Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 11
},
{
    "fields": {
        "application": 1,
        "token": "L9AA256EeMDvj69LtfDQknSRsLrzco",
        "expires": "2018-03-12T01:57:53.203Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 12
},
{
    "fields": {
        "application": 1,
        "token": "yKdUpQbm6UrnCeqkNlsa57MME7Esyv",
        "expires": "2018-03-12T01:57:58.848Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 13
},
{
    "fields": {
        "application": 1,
        "token": "bWK21idIlLep5hgvpATeirPz9sD5Sw",
        "expires": "2018-03-12T01:57:58.860Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 14
},
{
    "fields": {
        "application": 1,
        "token": "6PWqtCoKFerhYBKB5kMNI56iIYdoU9",
        "expires": "2018-03-12T01:57:58.872Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 15
},
{
    "fields": {
        "application": 1,
        "token": "kpD9tdLPzny0GfMLPdGNbBP1HV6JfE",
        "expires": "2018-03-12T01:58:05.168Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 16
},
{
    "fields": {
        "application": 1,
        "token": "WKGwf72Y8DJbjxZ0jIOq2xelSvh6Kp",
        "expires": "2018-03-12T01:58:05.185Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 17
},
{
    "fields": {
        "application": 1,
        "token": "kBZ6rVoWeCJq4c06jNr5LZqLzxm3ob",
        "expires": "2018-03-12T01:58:05.198Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 18
},
{
    "fields": {
        "application": 1,
        "token": "NRplEHDd21gxgGh9N4AXpsCr0uWLv1",
        "expires": "2018-03-12T01:58:32.782Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 19
},
{
    "fields": {
        "application": 1,
        "token": "vXj9adteXBE5UXKx87yrBqK7zKxbxx",
        "expires": "2018-03-12T01:58:36.138Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 20
},
{
    "fields": {
        "application": 1,
        "token": "c4Bl7KXZnDkWAOnvmFfEYAupuZjVXr",
        "expires": "2018-03-12T01:58:36.162Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 21
},
{
    "fields": {
        "application": 1,
        "token": "6YVph0CuR41aZN0iGsYrayZCFPLOuY",
        "expires": "2018-03-12T01:58:36.174Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 22
},
{
    "fields": {
        "application": 1,
        "token": "EeBNeo2VI4nDRtvuD4GF6rLkA4d38Y",
        "expires": "2018-03-12T01:59:08.741Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 23
},
{
    "fields": {
        "application": 1,
        "token": "GBtQ96nFGNhBeh4h7jhfamiKMD83O0",
        "expires": "2018-03-12T01:59:08.838Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 24
},
{
    "fields": {
        "application": 1,
        "token": "TA3AcgXDiDReVL2iWVd5PgAULxDvqg",
        "expires": "2018-03-12T01:59:08.856Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 25
},
{
    "fields": {
        "application": 1,
        "token": "eF7kkIDlnfaeXFQmY6xF7jwg4yhRj2",
        "expires": "2018-03-12T01:59:08.873Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 26
},
{
    "fields": {
        "application": 1,
        "token": "yTZc3GACpwIt5RX9OcubS6l7Z9BoTd",
        "expires": "2018-03-12T01:59:46.480Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 27
},
{
    "fields": {
        "application": 1,
        "token": "1txS1CCInH0NpT4XiPImXNYjZuhXL7",
        "expires": "2018-03-12T01:59:46.480Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 28
},
{
    "fields": {
        "application": 1,
        "token": "1a0qn4sPhmEAXjM3bvz6T0dZfMdeIX",
        "expires": "2018-03-12T01:59:46.503Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 29
},
{
    "fields": {
        "application": 1,
        "token": "PTw6fX9obHIAWritbGhuv5ZpMplWt2",
        "expires": "2018-03-12T02:20:47.727Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 30
},
{
    "fields": {
        "application": 1,
        "token": "lGNUArA0OnhuKAVvjln73xB5JcZ8yM",
        "expires": "2018-03-12T02:20:48.253Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 31
},
{
    "fields": {
        "application": 1,
        "token": "yqCDbKSqn9LEASZfZOXfAkN96OKMwT",
        "expires": "2018-03-12T02:20:48.272Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 32
},
{
    "fields": {
        "application": 1,
        "token": "vBSZ5BKGsiXKg7mAfhi30JEMCCBGui",
        "expires": "2018-03-12T02:20:48.284Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 33
},
{
    "fields": {
        "application": 1,
        "token": "D7NadSGvL6GzO5VoEyEEqgVeSkiUCU",
        "expires": "2018-03-12T02:21:04.573Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 34
},
{
    "fields": {
        "application": 1,
        "token": "XhrZKFjiJzMLIUwPIJ42yl8Q87pb69",
        "expires": "2018-03-12T02:21:04.577Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 35
},
{
    "fields": {
        "application": 1,
        "token": "8qmYGunBpUcUya2VFxvmLJuXCXtpKM",
        "expires": "2018-03-12T02:21:04.597Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 36
},
{
    "fields": {
        "application": 1,
        "token": "9d2Y9XhHbn0y9l8fEm6HwkviwSm5rJ",
        "expires": "2018-03-12T02:21:15.392Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 37
},
{
    "fields": {
        "application": 1,
        "token": "y6ndPuSN9fKRpDRVYCHT1xXmoHWLs5",
        "expires": "2018-03-12T02:21:15.392Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 38
},
{
    "fields": {
        "application": 1,
        "token": "ZWzXjneK213rxa0RCHbwmgenj37tT5",
        "expires": "2018-03-12T02:21:15.405Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 39
},
{
    "fields": {
        "application": 1,
        "token": "1UtOfG2mtX5S54i3A5XiSbqNjWlLzZ",
        "expires": "2018-03-12T02:22:48.423Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 40
},
{
    "fields": {
        "application": 1,
        "token": "BSk1hZbHjGORzh62779FQRKu5jbDGl",
        "expires": "2018-03-12T02:22:48.435Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 41
},
{
    "fields": {
        "application": 1,
        "token": "CQneE1xTCG0hxW53GuZs6Fz0rytHS7",
        "expires": "2018-03-12T02:22:48.448Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 42
},
{
    "fields": {
        "application": 1,
        "token": "uYnVETcGfQnTsJi3b48SGF7Xjl8ixv",
        "expires": "2018-03-12T02:22:52.464Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 43
},
{
    "fields": {
        "application": 1,
        "token": "XvKsGC1CsrlwIuURj4E9GULqkpIbSh",
        "expires": "2018-03-12T02:26:50.227Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 44
},
{
    "fields": {
        "application": 1,
        "token": "ukL2u1k9vlHXCK45TPyCkYUDTF89Cg",
        "expires": "2018-03-12T02:26:50.238Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 45
},
{
    "fields": {
        "application": 1,
        "token": "sMibXJiczFl30HkB0i3yUMhQ5blGKM",
        "expires": "2018-03-12T02:26:50.249Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 46
},
{
    "fields": {
        "application": 1,
        "token": "nDMctFojXw5BRqjL7Ws9KnqkxMtDPN",
        "expires": "2018-03-12T02:26:52.255Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 47
},
{
    "fields": {
        "application": 1,
        "token": "ctO9djRRO92WV3Xkhc81llMca7rQ3c",
        "expires": "2018-03-12T02:58:58.858Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 48
},
{
    "fields": {
        "application": 1,
        "token": "4MKDTWfTBrGZe31TWfZlpFdW7iSxae",
        "expires": "2018-03-12T02:58:59.547Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 49
},
{
    "fields": {
        "application": 1,
        "token": "OrWt3hHN8v3HajyYl2Eg0dVPtcTMqw",
        "expires": "2018-03-12T02:58:59.560Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 50
},
{
    "fields": {
        "application": 1,
        "token": "sBj0UN0MKn3c9EcTKVok2Z3QpQTLPq",
        "expires": "2018-03-12T02:59:01.582Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 51
},
{
    "fields": {
        "application": 1,
        "token": "bg4flatWN1CkqVYXG8dWwX9WHjDX9T",
        "expires": "2018-03-12T03:43:06.780Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 52
},
{
    "fields": {
        "application": 1,
        "token": "7zzYBxxVl0LQSdi3AU1mKi7Rbc9R23",
        "expires": "2018-03-12T03:43:08.296Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 53
},
{
    "fields": {
        "application": 1,
        "token": "scYRhTiy7rhBVsc6i5BfSw9HlESBZK",
        "expires": "2018-03-12T03:43:08.297Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 54
},
{
    "fields": {
        "application": 1,
        "token": "t0laVubqIzzgfzc0rPQdMxGkeCDlub",
        "expires": "2018-03-12T03:43:08.321Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 55
},
{
    "fields": {
        "application": 1,
        "token": "SqXw799fIwqNxol9FQEAvdzIpAmfIK",
        "expires": "2018-03-12T03:52:40.536Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 56
},
{
    "fields": {
        "application": 1,
        "token": "SvdInE8tgBjLQRogurJlrqC1F682zz",
        "expires": "2018-03-12T03:52:42.415Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 57
},
{
    "fields": {
        "application": 1,
        "token": "gAinjWSUSKfeXVkbVlWXxkGijUCYD9",
        "expires": "2018-03-12T03:52:42.418Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 58
},
{
    "fields": {
        "application": 1,
        "token": "dfPc4to8GrTUMrnqZSuOYdafrSRi8f",
        "expires": "2018-03-12T03:52:42.434Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 59
},
{
    "fields": {
        "application": 1,
        "token": "aCyzNDdtNcvqLyFQlXKMpJhWoa649c",
        "expires": "2018-03-12T03:57:17.158Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 60
},
{
    "fields": {
        "application": 1,
        "token": "VrZ4IHqopt3HPNswWsJWovlCXVzrNS",
        "expires": "2018-03-12T03:57:17.435Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 61
},
{
    "fields": {
        "application": 1,
        "token": "9oTDrM04piaYbHmgnOAcHXDyWtS0Xp",
        "expires": "2018-03-12T03:57:17.453Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 62
},
{
    "fields": {
        "application": 1,
        "token": "ECnBvX8Nw96ZA53TisXzf5jINHXGH2",
        "expires": "2018-03-12T03:57:17.464Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 63
},
{
    "fields": {
        "application": 1,
        "token": "QfBpaXQiIylTwDYMb2fLHjDlkQI6WB",
        "expires": "2018-03-12T05:14:12.178Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 64
},
{
    "fields": {
        "application": 1,
        "token": "bWEkkGKEMFQVXnJ8ov6S7vJZDf5P2e",
        "expires": "2018-03-12T05:14:12.179Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 65
},
{
    "fields": {
        "application": 1,
        "token": "ApTr526wlfNhxAuxJU1veUfdbYgcvC",
        "expires": "2018-03-12T05:14:12.202Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 66
},
{
    "fields": {
        "application": 1,
        "token": "rpKYLBfLJQeml0AhOFWSYhEsjEZ1X3",
        "expires": "2018-03-12T19:27:20.653Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 67
},
{
    "fields": {
        "application": 1,
        "token": "ukwz65gDfoT8TCrVHzaLIMOebIijKH",
        "expires": "2018-03-12T20:07:26.020Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 68
},
{
    "fields": {
        "application": 1,
        "token": "4Qt1bWzJMNXvwXp5xoPMasyNo4n88m",
        "expires": "2018-03-12T20:10:14.987Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 69
},
{
    "fields": {
        "application": 1,
        "token": "NAerAf65KtgJqRSEviLzM9ZX0wdNjY",
        "expires": "2018-03-12T20:10:15.011Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 70
},
{
    "fields": {
        "application": 1,
        "token": "HYBpsT4e8JETeKyIzGdR8SnOPJw5xl",
        "expires": "2018-03-12T20:10:15.012Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 71
},
{
    "fields": {
        "application": 1,
        "token": "pjNqKkeWkwDEQhu7d1ELXGNT9BKFpy",
        "expires": "2018-03-13T03:00:33.942Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 72
},
{
    "fields": {
        "application": 1,
        "token": "8amjgWZkiLFthMlgoMGNaipQJdSwBd",
        "expires": "2018-03-13T03:00:33.954Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 73
},
{
    "fields": {
        "application": 1,
        "token": "dlRHYix4VdNV4vSGP54snrvlZ4EPOX",
        "expires": "2018-03-13T03:00:33.966Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 74
},
{
    "fields": {
        "application": 1,
        "token": "bUFgi23EyApnimdMomPhH4nJvKEbkd",
        "expires": "2018-03-13T03:43:06.182Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 75
},
{
    "fields": {
        "application": 1,
        "token": "AvAjyEZx2k9aodGJCScHuVwcGqAOY0",
        "expires": "2018-03-13T03:43:06.885Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 76
},
{
    "fields": {
        "application": 1,
        "token": "DhkKrohK4RM0ViFFkaypGJKA4E48un",
        "expires": "2018-03-13T03:43:06.895Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 77
},
{
    "fields": {
        "application": 1,
        "token": "5Jhv6f1COsfZtpgihe9pbgdmJS7Ti7",
        "expires": "2018-03-13T03:43:08.770Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 78
},
{
    "fields": {
        "application": 1,
        "token": "tcYlSIv8cMUi774NKdt0DageHxHLcm",
        "expires": "2018-03-13T03:54:16.843Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 79
},
{
    "fields": {
        "application": 1,
        "token": "nFGXMsJj0t17ZCO7vJCdgs288Dz2DD",
        "expires": "2018-03-13T03:54:17.994Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 80
},
{
    "fields": {
        "application": 1,
        "token": "0thVdGayFFEfoKRKpCtv1sVYMqy2XB",
        "expires": "2018-03-13T03:54:17.995Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 81
},
{
    "fields": {
        "application": 1,
        "token": "DLAN1cj9Kj02kMls30199wPGSMZgaL",
        "expires": "2018-03-13T03:54:18.020Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 82
},
{
    "fields": {
        "application": 1,
        "token": "WjEhSQSFiywbvmcb8W9JfkCoXKawmt",
        "expires": "2018-03-13T05:18:18.493Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 83
},
{
    "fields": {
        "application": 1,
        "token": "pORGr8yYltJUFcZo282wEETzYVUUWB",
        "expires": "2018-03-13T05:18:18.509Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 84
},
{
    "fields": {
        "application": 1,
        "token": "sFHgllUc59t6YwaEpRuPXS8BsKIaA8",
        "expires": "2018-03-13T05:18:18.515Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 85
},
{
    "fields": {
        "application": 1,
        "token": "9C4rKhKNmduuS4TEJvdFJrbqqw9xmm",
        "expires": "2018-03-13T21:19:26.816Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 86
},
{
    "fields": {
        "application": 1,
        "token": "lhfr0Epuiq0uV5S2EcOGhBLfZjEvmZ",
        "expires": "2018-03-14T00:18:25.104Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 87
},
{
    "fields": {
        "application": 1,
        "token": "BrislOHw9OpSweuF8w7rrMn4ydgwkM",
        "expires": "2018-03-14T00:18:25.104Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 88
},
{
    "fields": {
        "application": 1,
        "token": "eawi43R20H6EI1YH0LMWgBapFAjUj6",
        "expires": "2018-03-14T00:18:25.134Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 89
},
{
    "fields": {
        "application": 1,
        "token": "FSFYQsWA9rHtOolPsjeTfWDwZ38U69",
        "expires": "2018-03-14T00:21:07.214Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 90
},
{
    "fields": {
        "application": 1,
        "token": "DWJnB0NhLpdjHaLnegE0tjowLtbDET",
        "expires": "2018-03-14T00:21:07.227Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 91
},
{
    "fields": {
        "application": 1,
        "token": "QFtg55wH2lzCCLBZ1pKYErShE9VRlQ",
        "expires": "2018-03-14T00:21:11.190Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 92
},
{
    "fields": {
        "application": 1,
        "token": "LQkuYo1wXzsSv7Jxh5b6vhS9lLy7fo",
        "expires": "2018-03-14T03:32:05.417Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 93
},
{
    "fields": {
        "application": 1,
        "token": "dnT2LAxSSuWI5ljqu3qbroMNqgVXoG",
        "expires": "2018-03-14T03:32:05.427Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 94
},
{
    "fields": {
        "application": 1,
        "token": "CDIA5wjRu34xK19YrV2BiX7M3c9XGM",
        "expires": "2018-03-14T03:32:09.392Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 95
},
{
    "fields": {
        "application": 1,
        "token": "DqpaiuwLwBRWAJJ8j1mF6IoBZzOfEm",
        "expires": "2018-03-14T03:41:11.966Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 96
},
{
    "fields": {
        "application": 1,
        "token": "2dnyMP6X0dZ30sKbrDt9cvQEJh1nFN",
        "expires": "2018-03-14T03:41:11.977Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 97
},
{
    "fields": {
        "application": 1,
        "token": "gLGV5EvWVeh1QFhrSheNdr5NUPSbJR",
        "expires": "2018-03-14T03:41:13.984Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 98
},
{
    "fields": {
        "application": 1,
        "token": "gwRAyV9ouPfSk3X4Cf59GFysosL7ya",
        "expires": "2018-03-14T04:57:39.364Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 99
},
{
    "fields": {
        "application": 1,
        "token": "m6oBC5ygXcLKPbogfZ2hT7zzqWc8dB",
        "expires": "2018-03-14T04:57:39.379Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 100
},
{
    "fields": {
        "application": 1,
        "token": "aOIPT4W4rN7tJVJqLmIMHpd2V9pUgO",
        "expires": "2018-03-14T04:57:39.403Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 101
},
{
    "fields": {
        "application": 1,
        "token": "UYJKSu1biYrZVFTQVClZv65ryMcVPC",
        "expires": "2018-03-14T04:57:51.270Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 102
},
{
    "fields": {
        "application": 1,
        "token": "foEUdirPlQvNtMC4tftpHnV1gwgO62",
        "expires": "2018-03-14T04:57:51.281Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 103
},
{
    "fields": {
        "application": 1,
        "token": "CxNUzi0xWRhdDl4bdoR3tXaWLFUhp9",
        "expires": "2018-03-14T04:57:51.299Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 104
},
{
    "fields": {
        "application": 1,
        "token": "Y9YrArk9HeNaiUXXF6A37PmXJYQ9e8",
        "expires": "2018-03-14T04:58:00.393Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 105
},
{
    "fields": {
        "application": 1,
        "token": "jLXdR39hsoUZMiq2MkWcxbwneNhD8d",
        "expires": "2018-03-14T04:58:00.406Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 106
},
{
    "fields": {
        "application": 1,
        "token": "N1x4EsuN4kysfavvARWsZW4VHYOOZ1",
        "expires": "2018-03-14T04:58:00.418Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 107
},
{
    "fields": {
        "application": 1,
        "token": "tniUzNDuMWi0DfNt5pOj7cqli97oVZ",
        "expires": "2018-03-14T04:58:00.700Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 108
},
{
    "fields": {
        "application": 1,
        "token": "8W0OSIMpxmIYRj3Eb75Jm6moCWwsfP",
        "expires": "2018-03-14T04:58:00.711Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 109
},
{
    "fields": {
        "application": 1,
        "token": "eNGP3WYsZlODypRHqpr8jjZ6dnzd6s",
        "expires": "2018-03-14T04:58:00.721Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 110
},
{
    "fields": {
        "application": 1,
        "token": "Uj2GLh3e1TjhtNGI0sWDnTu3SYELCE",
        "expires": "2018-03-14T04:58:13.060Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 111
},
{
    "fields": {
        "application": 1,
        "token": "gjyZmEckXr0kO6vytecMryiMkNrC4V",
        "expires": "2018-03-14T04:58:13.075Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 112
},
{
    "fields": {
        "application": 1,
        "token": "NHRZ8j2obqRdg8gGCYZbjw1XGobGh0",
        "expires": "2018-03-14T04:58:13.088Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 113
},
{
    "fields": {
        "application": 1,
        "token": "92Atkb13w460Ed6orhV99F4PEzxGp0",
        "expires": "2018-03-14T04:58:13.553Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 114
},
{
    "fields": {
        "application": 1,
        "token": "xUHJonNeCug2EqJ5VyzZQ8cAKC9zVl",
        "expires": "2018-03-14T04:58:13.565Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 115
},
{
    "fields": {
        "application": 1,
        "token": "5r4PEkFNbSn15yjp2ZAzHDIBPqVFMV",
        "expires": "2018-03-14T04:58:13.576Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 116
},
{
    "fields": {
        "application": 1,
        "token": "SDFYxaUyco0sXcId82dZ69TKOJml16",
        "expires": "2018-03-14T04:58:21.251Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 117
},
{
    "fields": {
        "application": 1,
        "token": "mtb7KIv9mnkJTjZpBKMPjL1Nje7LS3",
        "expires": "2018-03-14T04:58:21.267Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 118
},
{
    "fields": {
        "application": 1,
        "token": "857kl7uns4Ow02Vt9L9u9DN45tGe0O",
        "expires": "2018-03-14T04:58:21.276Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 119
},
{
    "fields": {
        "application": 1,
        "token": "jOdp4y9fJQjezds1XJnGpSKLciXFtI",
        "expires": "2018-03-14T04:58:21.767Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 120
},
{
    "fields": {
        "application": 1,
        "token": "oh9dc64U520zoNM51McrTjYghKSuSK",
        "expires": "2018-03-14T04:58:21.781Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 121
},
{
    "fields": {
        "application": 1,
        "token": "JoIrQERVcSzYwDoylNr2g27KOe2xzT",
        "expires": "2018-03-14T04:58:21.793Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 122
},
{
    "fields": {
        "application": 1,
        "token": "I3VK505SrcOeLjrdnVKVLJeM4eqY0o",
        "expires": "2018-03-14T19:21:32.708Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 123
},
{
    "fields": {
        "application": 1,
        "token": "JKedt69Ir0dN69Uyc5Su7f84Ll3OUs",
        "expires": "2018-03-14T19:24:06.048Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 124
},
{
    "fields": {
        "application": 1,
        "token": "txjWK1pDdw2cVyzHxlMTG7iKPvobWL",
        "expires": "2018-03-14T19:24:06.053Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 125
},
{
    "fields": {
        "application": 1,
        "token": "vo9x7csvpkekiEq9Z3G98VCwAwB4YZ",
        "expires": "2018-03-14T19:24:06.096Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 126
},
{
    "fields": {
        "application": 1,
        "token": "cLrUgLTqRMs07JZVyJVLRkVmkNJLbQ",
        "expires": "2018-03-14T19:24:22.840Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 127
},
{
    "fields": {
        "application": 1,
        "token": "5p0CYlYKJT9mpzkzsjy2q3lJzySPFZ",
        "expires": "2018-03-14T19:24:22.857Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 128
},
{
    "fields": {
        "application": 1,
        "token": "yJrGQihKHUsr6bUhQd3bdMXF1UvHtE",
        "expires": "2018-03-14T19:24:22.868Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 129
},
{
    "fields": {
        "application": 1,
        "token": "5CvGcL9ANBAWbVfoa1GSU6VAlsBP8f",
        "expires": "2018-03-14T19:24:36.906Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 130
},
{
    "fields": {
        "application": 1,
        "token": "EuPuHdd4jfkwt61nq6Kgwia3l1xerI",
        "expires": "2018-03-14T19:24:36.934Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 131
},
{
    "fields": {
        "application": 1,
        "token": "O6vmSUvY2ZpLSdYNgikms1w1h2SuQE",
        "expires": "2018-03-14T19:24:36.946Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 132
},
{
    "fields": {
        "application": 1,
        "token": "ue2F2uikMTs0sSFzcMzuwSXLEdd5KZ",
        "expires": "2018-03-14T20:11:00.633Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 133
},
{
    "fields": {
        "application": 1,
        "token": "PQ4wDjBanL8klDVp0JqStynpLCk0BJ",
        "expires": "2018-03-14T20:11:01.952Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 134
},
{
    "fields": {
        "application": 1,
        "token": "KRw2IpEkNRMK7sc2arcT0EXmn4uc3L",
        "expires": "2018-03-14T20:11:01.961Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 135
},
{
    "fields": {
        "application": 1,
        "token": "Ykpe1kRcyANmZMdfsibbwO0oAVPgTT",
        "expires": "2018-03-14T20:11:01.970Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 136
},
{
    "fields": {
        "application": 1,
        "token": "EkFf2tCrAQhbUW9eTShqba3GtYlU7N",
        "expires": "2018-03-14T20:41:47.053Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 137
},
{
    "fields": {
        "application": 1,
        "token": "6Yax8jYWrkYXXgaxhr5W3eIOlUB6Hq",
        "expires": "2018-03-14T20:41:47.068Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 138
},
{
    "fields": {
        "application": 1,
        "token": "q73fXLKaaghRMfV1V2LDmtVNgvQupZ",
        "expires": "2018-03-14T20:41:47.081Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 139
},
{
    "fields": {
        "application": 1,
        "token": "8SZQQG4U6z25olAmTg4cyBrYlLRtKr",
        "expires": "2018-03-14T22:57:18.964Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 140
},
{
    "fields": {
        "application": 1,
        "token": "HQZzhFLekckacuCcbveAo6QBW9HUFN",
        "expires": "2018-03-14T22:57:18.978Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 141
},
{
    "fields": {
        "application": 1,
        "token": "DbsJXi1bSyY8CMlR2bI2wSGGvoTDZE",
        "expires": "2018-03-14T22:57:18.991Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 142
},
{
    "fields": {
        "application": 1,
        "token": "JUX2th1vSh4Q37g2cM9P1GUe7prHZz",
        "expires": "2018-03-14T22:57:34.607Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 143
},
{
    "fields": {
        "application": 1,
        "token": "vnQ01Tn0idW3djqVYFDVrUCYw0dI5s",
        "expires": "2018-03-14T22:57:35.341Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 144
},
{
    "fields": {
        "application": 1,
        "token": "jWxu3Y6XMdwgMQoDttMWRSjw8yaEA6",
        "expires": "2018-03-14T22:57:35.356Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 145
},
{
    "fields": {
        "application": 1,
        "token": "FmX15RN27E7vFXD5zjdw7uB0nAZl7k",
        "expires": "2018-03-14T22:57:35.370Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 146
},
{
    "fields": {
        "application": 1,
        "token": "Ov4gz9svetR7b7qPuesauWgYhBi8DQ",
        "expires": "2018-03-15T03:41:32.461Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 147
},
{
    "fields": {
        "application": 1,
        "token": "mEaZvkde8et5DQc1jCZbIbtctmoAzU",
        "expires": "2018-03-15T03:41:32.474Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 148
},
{
    "fields": {
        "application": 1,
        "token": "mrPKv6RQXk3HR4dlaEeNewrq18VxC5",
        "expires": "2018-03-15T03:41:32.486Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 149
},
{
    "fields": {
        "application": 1,
        "token": "3wliuRHZRT1vmcon6jR566qZqKLoP1",
        "expires": "2018-03-15T03:41:36.440Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 150
},
{
    "fields": {
        "application": 1,
        "token": "MD0joecZ7wjitQ2bzHZ0kjo6W1Kkmb",
        "expires": "2018-03-15T20:38:56.272Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 151
},
{
    "fields": {
        "application": 1,
        "token": "g1M2hZhiqv6BZg3WOz7M2gOBTiAp69",
        "expires": "2018-03-15T20:39:09.010Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 152
},
{
    "fields": {
        "application": 1,
        "token": "ne1qfF17eezPIkbg6IIzKfiBMBMCBa",
        "expires": "2018-03-15T20:39:09.016Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 153
},
{
    "fields": {
        "application": 1,
        "token": "pilE3LTQbvXjDxB7rNALyugYrxQh31",
        "expires": "2018-03-15T20:39:09.022Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 154
},
{
    "fields": {
        "application": 1,
        "token": "7jHulNu6JI5htWJKeVTUeLf4Vop8Ij",
        "expires": "2018-03-15T20:39:42.506Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 155
},
{
    "fields": {
        "application": 1,
        "token": "gHiWQsENPz6YW9ggi0xfXSp2GpWTz6",
        "expires": "2018-03-15T20:39:42.507Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 156
},
{
    "fields": {
        "application": 1,
        "token": "iMLYJ5fpLk0yh4wVW9hwIjrKepc1EF",
        "expires": "2018-03-15T20:39:42.532Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 157
},
{
    "fields": {
        "application": 1,
        "token": "P2UV1NcLe2yvlgqBAbQEw7JRjRg8UA",
        "expires": "2018-03-18T03:26:09.460Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 158
},
{
    "fields": {
        "application": 1,
        "token": "CfuDbPS1I2e4NuslOJNDVgLjpqqKHb",
        "expires": "2018-03-18T21:29:15.720Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 159
},
{
    "fields": {
        "application": 1,
        "token": "ImB9S2mOZsgxLMIxdFF2IxXHpBlNVl",
        "expires": "2018-03-18T21:39:23.619Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 160
},
{
    "fields": {
        "application": 1,
        "token": "j0Gwp1Q9gdexMHpMxlWZ3tQQ82dHNt",
        "expires": "2018-03-18T21:39:23.629Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 161
},
{
    "fields": {
        "application": 1,
        "token": "HYYg8AaSuR4QPYXd0w9u8nZXCPCapA",
        "expires": "2018-03-18T21:39:23.641Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 162
},
{
    "fields": {
        "application": 1,
        "token": "QblglZBreSgUZvI7uUQoUQl1lZF3o1",
        "expires": "2018-03-18T22:25:40.092Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 163
},
{
    "fields": {
        "application": 1,
        "token": "4PA7BcCuL490xCl2pdeggbgvGDK5Zv",
        "expires": "2018-03-18T22:25:40.094Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 164
},
{
    "fields": {
        "application": 1,
        "token": "R767cmNVMnZPJUF6KwOuurzowTQDtI",
        "expires": "2018-03-18T22:25:40.122Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 165
},
{
    "fields": {
        "application": 1,
        "token": "dDszBgr9YYtCfPFIah9d1q3ttfkpIf",
        "expires": "2018-03-18T22:32:26.794Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 166
},
{
    "fields": {
        "application": 1,
        "token": "xSXqJ0fLFNe2fxEtDAPxvVRwSp558A",
        "expires": "2018-03-18T22:32:26.832Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 167
},
{
    "fields": {
        "application": 1,
        "token": "e27lAwaoOsc7IMQjXPZOtkH9qUCmwd",
        "expires": "2018-03-18T22:32:26.853Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 168
},
{
    "fields": {
        "application": 1,
        "token": "zcosCeHzju0UvQawFHwwmEUBEnEIoc",
        "expires": "2018-03-18T22:32:58.260Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 169
},
{
    "fields": {
        "application": 1,
        "token": "S820ddQW0MsOueSJ3wWIKUcRvKDkQp",
        "expires": "2018-03-18T22:33:17.209Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 170
},
{
    "fields": {
        "application": 1,
        "token": "RS8wBHkFTEp1xSaDWgJ8cbgC6cm5UE",
        "expires": "2018-03-18T22:33:17.225Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 171
},
{
    "fields": {
        "application": 1,
        "token": "a877iJHCJFoCytHjShRr8RARQihM9C",
        "expires": "2018-03-18T22:33:17.226Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 172
},
{
    "fields": {
        "application": 1,
        "token": "FL2jfBJfGXELypHXmd3EKRBC8tEavr",
        "expires": "2018-03-18T23:00:26.260Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 173
},
{
    "fields": {
        "application": 1,
        "token": "CitVjhE4JOv18qhhOyFJsFKfg0dKu3",
        "expires": "2018-03-18T23:00:26.278Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 174
},
{
    "fields": {
        "application": 1,
        "token": "GwQ1AJy9W1R3Gq2CU38RaXG8W1EonR",
        "expires": "2018-03-18T23:00:26.305Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 175
},
{
    "fields": {
        "application": 1,
        "token": "Nf7dMAVhqwPDgDowXVhKNvNnMDsJjF",
        "expires": "2018-03-18T23:00:28.790Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 176
},
{
    "fields": {
        "application": 1,
        "token": "5vOvzd8TKbXhZhAlEpK8MxLiwHxEVV",
        "expires": "2018-03-18T23:00:28.803Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 177
},
{
    "fields": {
        "application": 1,
        "token": "vOnIRF6JoOYAIgTPnATflx9JOMg02m",
        "expires": "2018-03-18T23:00:28.815Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 178
},
{
    "fields": {
        "application": 1,
        "token": "F4QTIj5civDNdESIdYFNN0lQB1GZMq",
        "expires": "2018-03-18T23:00:56.191Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 179
},
{
    "fields": {
        "application": 1,
        "token": "kQ4vjhfX56dE3gVSwpkarArgKXw08o",
        "expires": "2018-03-18T23:00:56.193Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 180
},
{
    "fields": {
        "application": 1,
        "token": "McaK7NGz3eSLl0nVO7pu8TxOl7qBbi",
        "expires": "2018-03-18T23:00:56.202Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 181
},
{
    "fields": {
        "application": 1,
        "token": "gBRcdy0joar4OlJPDgfykMcfrn5Qcs",
        "expires": "2018-03-19T01:38:48.216Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 182
},
{
    "fields": {
        "application": 1,
        "token": "Ve6YEy6rSGJZ9v4DqrXTmjwS31CG9n",
        "expires": "2018-03-19T04:30:11.378Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 183
},
{
    "fields": {
        "application": 1,
        "token": "4Oyl2XfmZN48982PXNmsN0XiT4yXbk",
        "expires": "2018-03-19T04:30:11.379Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 184
},
{
    "fields": {
        "application": 1,
        "token": "2VYi5pDReKK2G3zg2PhRRTmxN1cuQc",
        "expires": "2018-03-19T04:30:11.405Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 185
},
{
    "fields": {
        "application": 1,
        "token": "nq3nLyNnGxeuwUoYG7Vv4b5xI9daLv",
        "expires": "2018-03-19T04:39:37.898Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 186
},
{
    "fields": {
        "application": 1,
        "token": "Ni2yjJrOOEaodL1sbM90As2y1Enmtr",
        "expires": "2018-03-19T04:39:37.916Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 187
},
{
    "fields": {
        "application": 1,
        "token": "lT7gGOBh3a6nIaTTvdlEn9WnAk31bn",
        "expires": "2018-03-19T04:39:37.931Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 188
},
{
    "fields": {
        "application": 1,
        "token": "Z7MCGdxtFQrV7oolqW5pTs5gp4GXRn",
        "expires": "2018-03-19T04:39:38.106Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 189
},
{
    "fields": {
        "application": 1,
        "token": "megxJCWfCe32icaH03s0YiSiobNGwa",
        "expires": "2018-03-19T04:39:45.005Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 190
},
{
    "fields": {
        "application": 1,
        "token": "8xGdQemykjMRy2DwjuJ5YN09chpbfD",
        "expires": "2018-03-19T04:39:45.026Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 191
},
{
    "fields": {
        "application": 1,
        "token": "7OPIRinLQyA49SO5EjApp6bkBPWd0t",
        "expires": "2018-03-19T04:39:45.041Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 192
},
{
    "fields": {
        "application": 1,
        "token": "pFf9yOibpt8RwwtKXkCrPHSzw55bj7",
        "expires": "2018-03-19T22:23:23.090Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 193
},
{
    "fields": {
        "application": 1,
        "token": "0dyt7DithN7LX3W75pAz0GgrvkAcoD",
        "expires": "2018-03-19T22:27:38.019Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 194
},
{
    "fields": {
        "application": 1,
        "token": "QOUUfASZJ5P1goC9psy2IFdOF0MEQW",
        "expires": "2018-03-19T22:27:38.064Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 195
},
{
    "fields": {
        "application": 1,
        "token": "g9eiIVQbp3xomwlHGqHg1Dc5XeO3nI",
        "expires": "2018-03-19T22:27:38.083Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 196
},
{
    "fields": {
        "application": 1,
        "token": "hAh34J64yHpggrJWTBUKKH4mtEXJ6x",
        "expires": "2018-03-20T00:12:39.719Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 197
},
{
    "fields": {
        "application": 1,
        "token": "fGJcX3Cn99dbgVhVWAX16TaFZHmpSB",
        "expires": "2018-03-20T00:12:39.734Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 198
},
{
    "fields": {
        "application": 1,
        "token": "YANFBoI2O4b22egmVxJGcGkm5hj7yO",
        "expires": "2018-03-20T00:12:39.747Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 199
},
{
    "fields": {
        "application": 1,
        "token": "xm8aikDorJZkVgHhqj7ae8CABL9Br2",
        "expires": "2018-03-20T00:14:43.096Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 200
},
{
    "fields": {
        "application": 1,
        "token": "p5d0n7F6PlFpL3qFk8FjUhROsOWuFy",
        "expires": "2018-03-20T00:14:43.607Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 201
},
{
    "fields": {
        "application": 1,
        "token": "B5teMcSQxbjhCtjI8ogxkGaWczzpx0",
        "expires": "2018-03-20T00:14:43.623Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 202
},
{
    "fields": {
        "application": 1,
        "token": "gQcWHhLKlya6lmRcDQ5YvyBk30t0Qx",
        "expires": "2018-03-20T00:14:43.639Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 203
},
{
    "fields": {
        "application": 1,
        "token": "CYUBmMRFcdTUKVhGhuRjns1ne2vfic",
        "expires": "2018-03-20T00:14:46.066Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 204
},
{
    "fields": {
        "application": 1,
        "token": "3lJq7PBrBaGVWxXx0SlmDrfj1BlU4c",
        "expires": "2018-03-20T00:14:46.080Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 205
},
{
    "fields": {
        "application": 1,
        "token": "Qw2zQTQp9Z5XWnoeqoXHKJt8dHeWzq",
        "expires": "2018-03-20T00:14:46.099Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 206
},
{
    "fields": {
        "application": 1,
        "token": "10r1xz9SucKRDAMP3izWHkaK6HsFCc",
        "expires": "2018-03-20T00:15:04.460Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 207
},
{
    "fields": {
        "application": 1,
        "token": "pPunEnpoSN495eUf29xlDcljictZu3",
        "expires": "2018-03-20T00:15:04.486Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 208
},
{
    "fields": {
        "application": 1,
        "token": "TN58l4Xssh92VTEj2jMHkVBReOz3fb",
        "expires": "2018-03-20T00:15:04.503Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 209
},
{
    "fields": {
        "application": 1,
        "token": "9oMxwAXKkvHchWKY2Xvk4bUHiw7Qlx",
        "expires": "2018-03-20T00:15:04.973Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 210
},
{
    "fields": {
        "application": 1,
        "token": "CbgZyWtIzFSBNgIKxLamNGkVLmYOzq",
        "expires": "2018-03-20T00:15:04.988Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 211
},
{
    "fields": {
        "application": 1,
        "token": "1Ac70lwIwK6PZfB4TFaVyPAINIxkk6",
        "expires": "2018-03-20T00:15:05.000Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 212
},
{
    "fields": {
        "application": 1,
        "token": "unM3g1uVIp1fKkIAPR1NRk2WSFFGeq",
        "expires": "2018-03-20T00:15:20.149Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 213
},
{
    "fields": {
        "application": 1,
        "token": "RyLVnwFQ7mNnalPS2lFNxi4L5hab1u",
        "expires": "2018-03-20T00:15:20.169Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 214
},
{
    "fields": {
        "application": 1,
        "token": "0Yp7WL5ksXnC5RIuOYbqK3tHjPX0F0",
        "expires": "2018-03-20T00:15:20.182Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 215
},
{
    "fields": {
        "application": 1,
        "token": "zTGbWMENQWkXjNYRZCxfIgHytmfG9E",
        "expires": "2018-03-20T00:17:03.150Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 216
},
{
    "fields": {
        "application": 1,
        "token": "xGOsvtoNWCoKYLGs3KR6aGvdhXRgq7",
        "expires": "2018-03-20T00:17:03.166Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 217
},
{
    "fields": {
        "application": 1,
        "token": "ImeCDTv4dukoDi0ecs2UDTvcD2VxhK",
        "expires": "2018-03-20T00:17:03.177Z",
        "user": null,
        "scope": "read write"
    },
    "model": "oauth2_provider.accesstoken",
    "pk": 218
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:20:03.254Z",
        "next_attempt": 1521379203.23247,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:19:38.137Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "0d774bba-a598-4110-ac4d-35ce19f8d245"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T13:27:54.890Z",
        "next_attempt": 1521379674.8701,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T13:27:29.790Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "172d7ed3-77ea-4b2f-921a-eeb44aafe287"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-14T16:08:57.492Z",
        "next_attempt": 1521043737.47141,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-14T16:08:32.091Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "1b0c0270-4995-4420-9ff7-b27818694c5f"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T12:08:56.653Z",
        "next_attempt": 1521374936.63265,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T12:08:31.549Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "1f14aa8d-3e5d-4a75-8efa-f8f69ab01477"
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:19:32.507Z",
        "next_attempt": 1521379172.50168,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:19:07.417Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "1f660ffe-f833-4ddc-9a00-01dd2ceba26e"
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:19:49.402Z",
        "next_attempt": 1521379189.3841,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:19:24.301Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "279500f4-de00-463e-b44a-8f060eb59c78"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T18:43:57.710Z",
        "next_attempt": 1521398637.69428,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T18:43:32.318Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "2bd65e5c-0b71-4b87-b7c3-77ff2477b7c0"
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:20:09.971Z",
        "next_attempt": 1521379209.95472,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:19:44.866Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "458223c3-4a3a-4241-8cac-7cfc25f59b44"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-17T19:23:43.649Z",
        "next_attempt": 1521314623.62692,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-17T19:23:18.265Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "671c2f55-e502-448a-9634-7036d96ebed8"
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:19:16.016Z",
        "next_attempt": 1521379156.00938,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:18:50.954Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "7c30b0af-5e9e-412b-9b94-f437a0da4638"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T16:58:24.183Z",
        "next_attempt": 1521392304.15761,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T16:57:59.065Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "86accca4-36f8-4623-8a38-7d01abf3a0e8"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T16:59:33.768Z",
        "next_attempt": 1521392373.73796,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T16:59:08.650Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "87ee6544-ee7d-46c2-864c-f35d1486c49f"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-11T16:04:56.316Z",
        "next_attempt": 1520784296.28937,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-11T16:04:30.909Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "937eae0f-3063-4aed-91c4-55c93d1576ad"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T11:59:11.356Z",
        "next_attempt": 1521374351.337,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T11:58:45.942Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "957ef38d-524d-4579-a5e4-68fda740edee"
},
{
    "fields": {
        "last_exception": "Not a gzipped file",
        "failed": "2018-03-18T13:18:37.763Z",
        "next_attempt": 1521379117.74259,
        "args": "(I4\ntp0\n.",
        "created": "2018-03-18T13:18:12.660Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "9dc0521e-8ca8-4c7f-a1c5-136db8bd9059"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T16:55:00.826Z",
        "next_attempt": 1521392100.80403,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T16:54:35.430Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "b890350e-aff6-46e9-9885-a2540c44c216"
},
{
    "fields": {
        "last_exception": "ConfigBackup matching query does not exist.",
        "failed": "2018-03-18T12:01:00.162Z",
        "next_attempt": 1521374460.14093,
        "args": "(I1\ntp0\n.",
        "created": "2018-03-18T12:00:35.056Z",
        "retry_count": 0,
        "kwargs": "(dp0\n.",
        "function_name": "storageadmin.views.config_backup.restore_config"
    },
    "model": "django_ztask.task",
    "pk": "fd88ca0e-f711-4cea-bc42-7ac8b1e6806c"
}
]
