daemon off;
worker_processes  2;

events {
	worker_connections  1024;
	use epoll;
}

http {
	include		/opt/rockstor/etc/nginx/mime.types;
	default_type	application/octet-stream;

	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

	client_header_timeout	10m;
	client_body_timeout		10m;
	send_timeout			10m;

	connection_pool_size		256;
	client_header_buffer_size	1k;
	large_client_header_buffers	4 8k;
	request_pool_size			4k;

	gzip on;
	gzip_min_length	1100;
	gzip_buffers	4 8k;
	gzip_types	text/plain;

	output_buffers	1 32k;
	postpone_output	1460;

	sendfile	on;
	tcp_nopush	on;
	tcp_nodelay	on;

	keepalive_timeout	75 20;
	ignore_invalid_headers	on;
	index index.html;

	server {
		listen 443 default_server;
		server_name "~^(?<myhost>.+)$";
		ssl on;
		ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
		ssl_certificate /opt/rockstor/certs/rockstor.cert;
 		ssl_certificate_key /opt/rockstor/certs/rockstor.key;

		location /site_media  {
			root /media/; # Notice this is the /media folder that we create above
		}
		location ~* ^.+\.(zip|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|mov) {
			access_log   off;
			expires      30d;
		}
		location /static  {
			root /opt/rockstor/;
		}
		location /logs {
			root /opt/rockstor/src/rockstor/;
		}
		location / {
			proxy_pass_header Server;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-Proto https;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Scheme $scheme;
			proxy_connect_timeout 75;
			proxy_read_timeout 120;
			proxy_pass http://127.0.0.1:8000/;
		}
		location /socket.io {
			proxy_pass http://127.0.0.1:8001;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
		location /shell/ {
			valid_referers server_names;
			if ($invalid_referer) { return 404; }
			proxy_pass http://127.0.0.1:4200;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
	}
}